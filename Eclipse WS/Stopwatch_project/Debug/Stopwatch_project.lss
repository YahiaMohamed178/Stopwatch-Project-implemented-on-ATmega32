
Stopwatch_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000025be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000025be  00002652  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006a  0080006a  0000265c  2**0
                  ALLOC
  3 .stab         00001914  00000000  00000000  0000265c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000932  00000000  00000000  00003f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000048a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000049e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004b52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000679b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00007686  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008434  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008594  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008821  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008fef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__vector_1>
       8:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__vector_2>
       c:	0c 94 8d 12 	jmp	0x251a	; 0x251a <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 63 11 	jmp	0x22c6	; 0x22c6 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee eb       	ldi	r30, 0xBE	; 190
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 37       	cpi	r26, 0x77	; 119
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 31 07 	call	0xe62	; 0xe62 <main>
      8a:	0c 94 dd 12 	jmp	0x25ba	; 0x25ba <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 a6 12 	jmp	0x254c	; 0x254c <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 c2 12 	jmp	0x2584	; 0x2584 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 ce 12 	jmp	0x259c	; 0x259c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 ce 12 	jmp	0x259c	; 0x259c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 a6 12 	jmp	0x254c	; 0x254c <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 c2 12 	jmp	0x2584	; 0x2584 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 ce 12 	jmp	0x259c	; 0x259c <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 ce 12 	jmp	0x259c	; 0x259c <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 ce 12 	jmp	0x259c	; 0x259c <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 b6 12 	jmp	0x256c	; 0x256c <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 d2 12 	jmp	0x25a4	; 0x25a4 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <Timer1_ctc_Init>:
unsigned char minutes_units=0;
unsigned char minutes_tens=0;
unsigned char hours_units=0;
unsigned char hours_tens=0;
/*******Timer Function******/
void Timer1_ctc_Init(void){
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	TCCR1A = (1<<FOC1A);
     b4e:	ef e4       	ldi	r30, 0x4F	; 79
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	88 e0       	ldi	r24, 0x08	; 8
     b54:	80 83       	st	Z, r24
	TCCR1B = (1<<WGM12) | (1<<CS10) | (1<<CS12); //CTC MODE & PRESCALER 1024
     b56:	ee e4       	ldi	r30, 0x4E	; 78
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	8d e0       	ldi	r24, 0x0D	; 13
     b5c:	80 83       	st	Z, r24
	TCNT1=0;
     b5e:	ec e4       	ldi	r30, 0x4C	; 76
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	11 82       	std	Z+1, r1	; 0x01
     b64:	10 82       	st	Z, r1
	OCR1A=15625; //compare match 15625
     b66:	ea e4       	ldi	r30, 0x4A	; 74
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	89 e0       	ldi	r24, 0x09	; 9
     b6c:	9d e3       	ldi	r25, 0x3D	; 61
     b6e:	91 83       	std	Z+1, r25	; 0x01
     b70:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE1A); //ENABLE MODULE INTERRUPT
     b72:	a9 e5       	ldi	r26, 0x59	; 89
     b74:	b0 e0       	ldi	r27, 0x00	; 0
     b76:	e9 e5       	ldi	r30, 0x59	; 89
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	80 81       	ld	r24, Z
     b7c:	80 61       	ori	r24, 0x10	; 16
     b7e:	8c 93       	st	X, r24
	SREG |= (1<<7); //ENABLE GLOBAL INTERRUPT
     b80:	af e5       	ldi	r26, 0x5F	; 95
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	ef e5       	ldi	r30, 0x5F	; 95
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	80 81       	ld	r24, Z
     b8a:	80 68       	ori	r24, 0x80	; 128
     b8c:	8c 93       	st	X, r24

}
     b8e:	cf 91       	pop	r28
     b90:	df 91       	pop	r29
     b92:	08 95       	ret

00000b94 <hide_all_digits>:
void hide_all_digits(void){
     b94:	df 93       	push	r29
     b96:	cf 93       	push	r28
     b98:	cd b7       	in	r28, 0x3d	; 61
     b9a:	de b7       	in	r29, 0x3e	; 62
	PORTA &= 0xC0;  //This function hides digits of all 7-segments
     b9c:	ab e3       	ldi	r26, 0x3B	; 59
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	eb e3       	ldi	r30, 0x3B	; 59
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 81       	ld	r24, Z
     ba6:	80 7c       	andi	r24, 0xC0	; 192
     ba8:	8c 93       	st	X, r24
}
     baa:	cf 91       	pop	r28
     bac:	df 91       	pop	r29
     bae:	08 95       	ret

00000bb0 <show_digit>:
void show_digit(unsigned char n){  //This function shows one 7-segment at a time
     bb0:	df 93       	push	r29
     bb2:	cf 93       	push	r28
     bb4:	0f 92       	push	r0
     bb6:	cd b7       	in	r28, 0x3d	; 61
     bb8:	de b7       	in	r29, 0x3e	; 62
     bba:	89 83       	std	Y+1, r24	; 0x01
	PORTA |= (1<<n);
     bbc:	ab e3       	ldi	r26, 0x3B	; 59
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	eb e3       	ldi	r30, 0x3B	; 59
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	80 81       	ld	r24, Z
     bc6:	48 2f       	mov	r20, r24
     bc8:	89 81       	ldd	r24, Y+1	; 0x01
     bca:	28 2f       	mov	r18, r24
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	02 2e       	mov	r0, r18
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <show_digit+0x2a>
     bd6:	88 0f       	add	r24, r24
     bd8:	99 1f       	adc	r25, r25
     bda:	0a 94       	dec	r0
     bdc:	e2 f7       	brpl	.-8      	; 0xbd6 <show_digit+0x26>
     bde:	84 2b       	or	r24, r20
     be0:	8c 93       	st	X, r24
}
     be2:	0f 90       	pop	r0
     be4:	cf 91       	pop	r28
     be6:	df 91       	pop	r29
     be8:	08 95       	ret

00000bea <INT0_Init>:
/******Reset Function*******/
void INT0_Init(void){
     bea:	df 93       	push	r29
     bec:	cf 93       	push	r28
     bee:	cd b7       	in	r28, 0x3d	; 61
     bf0:	de b7       	in	r29, 0x3e	; 62
	MCUCR |= (1<<ISC01); //TRIGGER ON THE FALLING EDGE
     bf2:	a5 e5       	ldi	r26, 0x55	; 85
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	e5 e5       	ldi	r30, 0x55	; 85
     bf8:	f0 e0       	ldi	r31, 0x00	; 0
     bfa:	80 81       	ld	r24, Z
     bfc:	82 60       	ori	r24, 0x02	; 2
     bfe:	8c 93       	st	X, r24
	GICR |= (1<<INT0);  //INT0 ENABLE
     c00:	ab e5       	ldi	r26, 0x5B	; 91
     c02:	b0 e0       	ldi	r27, 0x00	; 0
     c04:	eb e5       	ldi	r30, 0x5B	; 91
     c06:	f0 e0       	ldi	r31, 0x00	; 0
     c08:	80 81       	ld	r24, Z
     c0a:	80 64       	ori	r24, 0x40	; 64
     c0c:	8c 93       	st	X, r24
	SREG |= (1<<7);  //GLOBAL INTERRUPT ENABLE
     c0e:	af e5       	ldi	r26, 0x5F	; 95
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	ef e5       	ldi	r30, 0x5F	; 95
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	80 81       	ld	r24, Z
     c18:	80 68       	ori	r24, 0x80	; 128
     c1a:	8c 93       	st	X, r24
	DDRD &= ~(1<<PD2);
     c1c:	a1 e3       	ldi	r26, 0x31	; 49
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	e1 e3       	ldi	r30, 0x31	; 49
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	8b 7f       	andi	r24, 0xFB	; 251
     c28:	8c 93       	st	X, r24
}
     c2a:	cf 91       	pop	r28
     c2c:	df 91       	pop	r29
     c2e:	08 95       	ret

00000c30 <INT1_Init>:
/******Pause Function*****/
void INT1_Init(void){
     c30:	df 93       	push	r29
     c32:	cf 93       	push	r28
     c34:	cd b7       	in	r28, 0x3d	; 61
     c36:	de b7       	in	r29, 0x3e	; 62
	MCUCR |= (1<<ISC11) | (1<<ISC10); //TRIGGER ON RISING EDGE
     c38:	a5 e5       	ldi	r26, 0x55	; 85
     c3a:	b0 e0       	ldi	r27, 0x00	; 0
     c3c:	e5 e5       	ldi	r30, 0x55	; 85
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 81       	ld	r24, Z
     c42:	8c 60       	ori	r24, 0x0C	; 12
     c44:	8c 93       	st	X, r24
	GICR |= (1<<INT1); //INT1 ENABLE
     c46:	ab e5       	ldi	r26, 0x5B	; 91
     c48:	b0 e0       	ldi	r27, 0x00	; 0
     c4a:	eb e5       	ldi	r30, 0x5B	; 91
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	80 68       	ori	r24, 0x80	; 128
     c52:	8c 93       	st	X, r24
	SREG |= (1<<7); //GLOBAL INTERRUPT ENABLE
     c54:	af e5       	ldi	r26, 0x5F	; 95
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	ef e5       	ldi	r30, 0x5F	; 95
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	80 68       	ori	r24, 0x80	; 128
     c60:	8c 93       	st	X, r24
	DDRD &= ~(1<<PD3);
     c62:	a1 e3       	ldi	r26, 0x31	; 49
     c64:	b0 e0       	ldi	r27, 0x00	; 0
     c66:	e1 e3       	ldi	r30, 0x31	; 49
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	80 81       	ld	r24, Z
     c6c:	87 7f       	andi	r24, 0xF7	; 247
     c6e:	8c 93       	st	X, r24
}
     c70:	cf 91       	pop	r28
     c72:	df 91       	pop	r29
     c74:	08 95       	ret

00000c76 <INT2_Init>:

/******Resume Function****/
void INT2_Init(void){
     c76:	df 93       	push	r29
     c78:	cf 93       	push	r28
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
	MCUCSR &= ~(1<<ISC2); //WHEN THIS BIT IS ZERO, TRIGGER ON FALLING EDGE
     c7e:	a4 e5       	ldi	r26, 0x54	; 84
     c80:	b0 e0       	ldi	r27, 0x00	; 0
     c82:	e4 e5       	ldi	r30, 0x54	; 84
     c84:	f0 e0       	ldi	r31, 0x00	; 0
     c86:	80 81       	ld	r24, Z
     c88:	8f 7b       	andi	r24, 0xBF	; 191
     c8a:	8c 93       	st	X, r24
	GICR |= (1<<INT2);  //INT2 ENABLE
     c8c:	ab e5       	ldi	r26, 0x5B	; 91
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	eb e5       	ldi	r30, 0x5B	; 91
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	80 81       	ld	r24, Z
     c96:	80 62       	ori	r24, 0x20	; 32
     c98:	8c 93       	st	X, r24
	SREG |= (1<<7);  //GLOBAL INTERRUPT ENABLE
     c9a:	af e5       	ldi	r26, 0x5F	; 95
     c9c:	b0 e0       	ldi	r27, 0x00	; 0
     c9e:	ef e5       	ldi	r30, 0x5F	; 95
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	80 68       	ori	r24, 0x80	; 128
     ca6:	8c 93       	st	X, r24
	DDRB &= ~(1<<PB2);
     ca8:	a7 e3       	ldi	r26, 0x37	; 55
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	e7 e3       	ldi	r30, 0x37	; 55
     cae:	f0 e0       	ldi	r31, 0x00	; 0
     cb0:	80 81       	ld	r24, Z
     cb2:	8b 7f       	andi	r24, 0xFB	; 251
     cb4:	8c 93       	st	X, r24
}
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <toggle_mode>:

void toggle_mode(void){
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62
     cc4:	2e 97       	sbiw	r28, 0x0e	; 14
     cc6:	0f b6       	in	r0, 0x3f	; 63
     cc8:	f8 94       	cli
     cca:	de bf       	out	0x3e, r29	; 62
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	cd bf       	out	0x3d, r28	; 61
	if((!(PINB & (1<<PB7)))&&(toggle_pressed==0)){
     cd0:	e6 e3       	ldi	r30, 0x36	; 54
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 81       	ld	r24, Z
     cd6:	88 23       	and	r24, r24
     cd8:	0c f4       	brge	.+2      	; 0xcdc <toggle_mode+0x20>
     cda:	b3 c0       	rjmp	.+358    	; 0xe42 <toggle_mode+0x186>
     cdc:	80 91 70 00 	lds	r24, 0x0070
     ce0:	88 23       	and	r24, r24
     ce2:	09 f0       	breq	.+2      	; 0xce6 <toggle_mode+0x2a>
     ce4:	ae c0       	rjmp	.+348    	; 0xe42 <toggle_mode+0x186>
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	a8 e4       	ldi	r26, 0x48	; 72
     cec:	b2 e4       	ldi	r27, 0x42	; 66
     cee:	8b 87       	std	Y+11, r24	; 0x0b
     cf0:	9c 87       	std	Y+12, r25	; 0x0c
     cf2:	ad 87       	std	Y+13, r26	; 0x0d
     cf4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cf6:	6b 85       	ldd	r22, Y+11	; 0x0b
     cf8:	7c 85       	ldd	r23, Y+12	; 0x0c
     cfa:	8d 85       	ldd	r24, Y+13	; 0x0d
     cfc:	9e 85       	ldd	r25, Y+14	; 0x0e
     cfe:	20 e0       	ldi	r18, 0x00	; 0
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	4a e7       	ldi	r20, 0x7A	; 122
     d04:	55 e4       	ldi	r21, 0x45	; 69
     d06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d0a:	dc 01       	movw	r26, r24
     d0c:	cb 01       	movw	r24, r22
     d0e:	8f 83       	std	Y+7, r24	; 0x07
     d10:	98 87       	std	Y+8, r25	; 0x08
     d12:	a9 87       	std	Y+9, r26	; 0x09
     d14:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d16:	6f 81       	ldd	r22, Y+7	; 0x07
     d18:	78 85       	ldd	r23, Y+8	; 0x08
     d1a:	89 85       	ldd	r24, Y+9	; 0x09
     d1c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e8       	ldi	r20, 0x80	; 128
     d24:	5f e3       	ldi	r21, 0x3F	; 63
     d26:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d2a:	88 23       	and	r24, r24
     d2c:	2c f4       	brge	.+10     	; 0xd38 <toggle_mode+0x7c>
		__ticks = 1;
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	9e 83       	std	Y+6, r25	; 0x06
     d34:	8d 83       	std	Y+5, r24	; 0x05
     d36:	3f c0       	rjmp	.+126    	; 0xdb6 <toggle_mode+0xfa>
	else if (__tmp > 65535)
     d38:	6f 81       	ldd	r22, Y+7	; 0x07
     d3a:	78 85       	ldd	r23, Y+8	; 0x08
     d3c:	89 85       	ldd	r24, Y+9	; 0x09
     d3e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	3f ef       	ldi	r19, 0xFF	; 255
     d44:	4f e7       	ldi	r20, 0x7F	; 127
     d46:	57 e4       	ldi	r21, 0x47	; 71
     d48:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d4c:	18 16       	cp	r1, r24
     d4e:	4c f5       	brge	.+82     	; 0xda2 <toggle_mode+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d50:	6b 85       	ldd	r22, Y+11	; 0x0b
     d52:	7c 85       	ldd	r23, Y+12	; 0x0c
     d54:	8d 85       	ldd	r24, Y+13	; 0x0d
     d56:	9e 85       	ldd	r25, Y+14	; 0x0e
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	40 e2       	ldi	r20, 0x20	; 32
     d5e:	51 e4       	ldi	r21, 0x41	; 65
     d60:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d64:	dc 01       	movw	r26, r24
     d66:	cb 01       	movw	r24, r22
     d68:	bc 01       	movw	r22, r24
     d6a:	cd 01       	movw	r24, r26
     d6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d70:	dc 01       	movw	r26, r24
     d72:	cb 01       	movw	r24, r22
     d74:	9e 83       	std	Y+6, r25	; 0x06
     d76:	8d 83       	std	Y+5, r24	; 0x05
     d78:	0f c0       	rjmp	.+30     	; 0xd98 <toggle_mode+0xdc>
     d7a:	80 e9       	ldi	r24, 0x90	; 144
     d7c:	91 e0       	ldi	r25, 0x01	; 1
     d7e:	9c 83       	std	Y+4, r25	; 0x04
     d80:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d82:	8b 81       	ldd	r24, Y+3	; 0x03
     d84:	9c 81       	ldd	r25, Y+4	; 0x04
     d86:	01 97       	sbiw	r24, 0x01	; 1
     d88:	f1 f7       	brne	.-4      	; 0xd86 <toggle_mode+0xca>
     d8a:	9c 83       	std	Y+4, r25	; 0x04
     d8c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d8e:	8d 81       	ldd	r24, Y+5	; 0x05
     d90:	9e 81       	ldd	r25, Y+6	; 0x06
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	9e 83       	std	Y+6, r25	; 0x06
     d96:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d98:	8d 81       	ldd	r24, Y+5	; 0x05
     d9a:	9e 81       	ldd	r25, Y+6	; 0x06
     d9c:	00 97       	sbiw	r24, 0x00	; 0
     d9e:	69 f7       	brne	.-38     	; 0xd7a <toggle_mode+0xbe>
     da0:	14 c0       	rjmp	.+40     	; 0xdca <toggle_mode+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     da2:	6f 81       	ldd	r22, Y+7	; 0x07
     da4:	78 85       	ldd	r23, Y+8	; 0x08
     da6:	89 85       	ldd	r24, Y+9	; 0x09
     da8:	9a 85       	ldd	r25, Y+10	; 0x0a
     daa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dae:	dc 01       	movw	r26, r24
     db0:	cb 01       	movw	r24, r22
     db2:	9e 83       	std	Y+6, r25	; 0x06
     db4:	8d 83       	std	Y+5, r24	; 0x05
     db6:	8d 81       	ldd	r24, Y+5	; 0x05
     db8:	9e 81       	ldd	r25, Y+6	; 0x06
     dba:	9a 83       	std	Y+2, r25	; 0x02
     dbc:	89 83       	std	Y+1, r24	; 0x01
     dbe:	89 81       	ldd	r24, Y+1	; 0x01
     dc0:	9a 81       	ldd	r25, Y+2	; 0x02
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	f1 f7       	brne	.-4      	; 0xdc2 <toggle_mode+0x106>
     dc6:	9a 83       	std	Y+2, r25	; 0x02
     dc8:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(50);
		if(!(PINB & (1<<PB7))){
     dca:	e6 e3       	ldi	r30, 0x36	; 54
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	88 23       	and	r24, r24
     dd2:	bc f1       	brlt	.+110    	; 0xe42 <toggle_mode+0x186>
			toggle_pressed=1;
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	80 93 70 00 	sts	0x0070, r24
			if(count_up_flag==1){
     dda:	80 91 69 00 	lds	r24, 0x0069
     dde:	81 30       	cpi	r24, 0x01	; 1
     de0:	c1 f4       	brne	.+48     	; 0xe12 <toggle_mode+0x156>
				count_up_flag=0;
     de2:	10 92 69 00 	sts	0x0069, r1
				DDRD |= (1<<5);
     de6:	a1 e3       	ldi	r26, 0x31	; 49
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e1 e3       	ldi	r30, 0x31	; 49
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	80 62       	ori	r24, 0x20	; 32
     df2:	8c 93       	st	X, r24
				PORTD |= (1<<5);
     df4:	a2 e3       	ldi	r26, 0x32	; 50
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	e2 e3       	ldi	r30, 0x32	; 50
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	80 62       	ori	r24, 0x20	; 32
     e00:	8c 93       	st	X, r24
				PORTD &= ~(1<<4);
     e02:	a2 e3       	ldi	r26, 0x32	; 50
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	e2 e3       	ldi	r30, 0x32	; 50
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	80 81       	ld	r24, Z
     e0c:	8f 7e       	andi	r24, 0xEF	; 239
     e0e:	8c 93       	st	X, r24
     e10:	18 c0       	rjmp	.+48     	; 0xe42 <toggle_mode+0x186>
			}
			else{
				count_up_flag=1;
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	80 93 69 00 	sts	0x0069, r24
				DDRD |= (1<<4);
     e18:	a1 e3       	ldi	r26, 0x31	; 49
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e1 e3       	ldi	r30, 0x31	; 49
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	80 61       	ori	r24, 0x10	; 16
     e24:	8c 93       	st	X, r24
				PORTD |= (1<<4);
     e26:	a2 e3       	ldi	r26, 0x32	; 50
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e2 e3       	ldi	r30, 0x32	; 50
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	80 61       	ori	r24, 0x10	; 16
     e32:	8c 93       	st	X, r24
				PORTD&= ~(1<<5);
     e34:	a2 e3       	ldi	r26, 0x32	; 50
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e2 e3       	ldi	r30, 0x32	; 50
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	8f 7d       	andi	r24, 0xDF	; 223
     e40:	8c 93       	st	X, r24
			}

		}
	}
	if(PINB & (1<<PB7)){
     e42:	e6 e3       	ldi	r30, 0x36	; 54
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	88 23       	and	r24, r24
     e4a:	14 f4       	brge	.+4      	; 0xe50 <toggle_mode+0x194>
		toggle_pressed=0;
     e4c:	10 92 70 00 	sts	0x0070, r1
	}
}
     e50:	2e 96       	adiw	r28, 0x0e	; 14
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	f8 94       	cli
     e56:	de bf       	out	0x3e, r29	; 62
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	cd bf       	out	0x3d, r28	; 61
     e5c:	cf 91       	pop	r28
     e5e:	df 91       	pop	r29
     e60:	08 95       	ret

00000e62 <main>:
int main(void){
     e62:	0f 93       	push	r16
     e64:	1f 93       	push	r17
     e66:	df 93       	push	r29
     e68:	cf 93       	push	r28
     e6a:	cd b7       	in	r28, 0x3d	; 61
     e6c:	de b7       	in	r29, 0x3e	; 62
     e6e:	c9 5a       	subi	r28, 0xA9	; 169
     e70:	d0 40       	sbci	r29, 0x00	; 0
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	f8 94       	cli
     e76:	de bf       	out	0x3e, r29	; 62
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	cd bf       	out	0x3d, r28	; 61
	DDRD |= (1<<4);
     e7c:	a1 e3       	ldi	r26, 0x31	; 49
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	e1 e3       	ldi	r30, 0x31	; 49
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	80 81       	ld	r24, Z
     e86:	80 61       	ori	r24, 0x10	; 16
     e88:	8c 93       	st	X, r24
	PORTD |= (1<<4);
     e8a:	a2 e3       	ldi	r26, 0x32	; 50
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	e2 e3       	ldi	r30, 0x32	; 50
     e90:	f0 e0       	ldi	r31, 0x00	; 0
     e92:	80 81       	ld	r24, Z
     e94:	80 61       	ori	r24, 0x10	; 16
     e96:	8c 93       	st	X, r24
	PORTD&= ~(1<<5);
     e98:	a2 e3       	ldi	r26, 0x32	; 50
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e2 e3       	ldi	r30, 0x32	; 50
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	80 81       	ld	r24, Z
     ea2:	8f 7d       	andi	r24, 0xDF	; 223
     ea4:	8c 93       	st	X, r24
	DDRA |= 0x3F;
     ea6:	aa e3       	ldi	r26, 0x3A	; 58
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	ea e3       	ldi	r30, 0x3A	; 58
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	8f 63       	ori	r24, 0x3F	; 63
     eb2:	8c 93       	st	X, r24
	DDRC |= 0x0F;
     eb4:	a4 e3       	ldi	r26, 0x34	; 52
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e4 e3       	ldi	r30, 0x34	; 52
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	80 81       	ld	r24, Z
     ebe:	8f 60       	ori	r24, 0x0F	; 15
     ec0:	8c 93       	st	X, r24
	PORTC= (PORTC & 0xF0); //initialize PORTC as zero
     ec2:	a5 e3       	ldi	r26, 0x35	; 53
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e5 e3       	ldi	r30, 0x35	; 53
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	80 81       	ld	r24, Z
     ecc:	80 7f       	andi	r24, 0xF0	; 240
     ece:	8c 93       	st	X, r24
	DDRB &= 0; //SET ALL PORTB PINS AS INPUT
     ed0:	e7 e3       	ldi	r30, 0x37	; 55
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	80 81       	ld	r24, Z
     ed6:	e7 e3       	ldi	r30, 0x37	; 55
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	10 82       	st	Z, r1
	PORTB =0xFF; //ACTIVATE INTERNAL PULL-UP FOR ALL PORTB PINS
     edc:	e8 e3       	ldi	r30, 0x38	; 56
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	8f ef       	ldi	r24, 0xFF	; 255
     ee2:	80 83       	st	Z, r24
	Timer1_ctc_Init();
     ee4:	0e 94 a3 05 	call	0xb46	; 0xb46 <Timer1_ctc_Init>
	INT0_Init();
     ee8:	0e 94 f5 05 	call	0xbea	; 0xbea <INT0_Init>
	INT1_Init();
     eec:	0e 94 18 06 	call	0xc30	; 0xc30 <INT1_Init>
	INT2_Init();
     ef0:	0e 94 3b 06 	call	0xc76	; 0xc76 <INT2_Init>
	while(1){
		hide_all_digits();
     ef4:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (seconds_units & 0x0F);
     ef8:	a5 e3       	ldi	r26, 0x35	; 53
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	e5 e3       	ldi	r30, 0x35	; 53
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	98 2f       	mov	r25, r24
     f04:	90 7f       	andi	r25, 0xF0	; 240
     f06:	80 91 71 00 	lds	r24, 0x0071
     f0a:	8f 70       	andi	r24, 0x0F	; 15
     f0c:	89 2b       	or	r24, r25
     f0e:	8c 93       	st	X, r24
		show_digit(5);
     f10:	85 e0       	ldi	r24, 0x05	; 5
     f12:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
     f16:	fe 01       	movw	r30, r28
     f18:	eb 55       	subi	r30, 0x5B	; 91
     f1a:	ff 4f       	sbci	r31, 0xFF	; 255
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	a0 e0       	ldi	r26, 0x00	; 0
     f22:	b0 e4       	ldi	r27, 0x40	; 64
     f24:	80 83       	st	Z, r24
     f26:	91 83       	std	Z+1, r25	; 0x01
     f28:	a2 83       	std	Z+2, r26	; 0x02
     f2a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f2c:	8e 01       	movw	r16, r28
     f2e:	0f 55       	subi	r16, 0x5F	; 95
     f30:	1f 4f       	sbci	r17, 0xFF	; 255
     f32:	fe 01       	movw	r30, r28
     f34:	eb 55       	subi	r30, 0x5B	; 91
     f36:	ff 4f       	sbci	r31, 0xFF	; 255
     f38:	60 81       	ld	r22, Z
     f3a:	71 81       	ldd	r23, Z+1	; 0x01
     f3c:	82 81       	ldd	r24, Z+2	; 0x02
     f3e:	93 81       	ldd	r25, Z+3	; 0x03
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	4a e7       	ldi	r20, 0x7A	; 122
     f46:	55 e4       	ldi	r21, 0x45	; 69
     f48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f4c:	dc 01       	movw	r26, r24
     f4e:	cb 01       	movw	r24, r22
     f50:	f8 01       	movw	r30, r16
     f52:	80 83       	st	Z, r24
     f54:	91 83       	std	Z+1, r25	; 0x01
     f56:	a2 83       	std	Z+2, r26	; 0x02
     f58:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f5a:	fe 01       	movw	r30, r28
     f5c:	ef 55       	subi	r30, 0x5F	; 95
     f5e:	ff 4f       	sbci	r31, 0xFF	; 255
     f60:	60 81       	ld	r22, Z
     f62:	71 81       	ldd	r23, Z+1	; 0x01
     f64:	82 81       	ldd	r24, Z+2	; 0x02
     f66:	93 81       	ldd	r25, Z+3	; 0x03
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	40 e8       	ldi	r20, 0x80	; 128
     f6e:	5f e3       	ldi	r21, 0x3F	; 63
     f70:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     f74:	88 23       	and	r24, r24
     f76:	44 f4       	brge	.+16     	; 0xf88 <main+0x126>
		__ticks = 1;
     f78:	fe 01       	movw	r30, r28
     f7a:	e1 56       	subi	r30, 0x61	; 97
     f7c:	ff 4f       	sbci	r31, 0xFF	; 255
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	91 83       	std	Z+1, r25	; 0x01
     f84:	80 83       	st	Z, r24
     f86:	64 c0       	rjmp	.+200    	; 0x1050 <main+0x1ee>
	else if (__tmp > 65535)
     f88:	fe 01       	movw	r30, r28
     f8a:	ef 55       	subi	r30, 0x5F	; 95
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	60 81       	ld	r22, Z
     f90:	71 81       	ldd	r23, Z+1	; 0x01
     f92:	82 81       	ldd	r24, Z+2	; 0x02
     f94:	93 81       	ldd	r25, Z+3	; 0x03
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	3f ef       	ldi	r19, 0xFF	; 255
     f9a:	4f e7       	ldi	r20, 0x7F	; 127
     f9c:	57 e4       	ldi	r21, 0x47	; 71
     f9e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     fa2:	18 16       	cp	r1, r24
     fa4:	0c f0       	brlt	.+2      	; 0xfa8 <main+0x146>
     fa6:	43 c0       	rjmp	.+134    	; 0x102e <main+0x1cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fa8:	fe 01       	movw	r30, r28
     faa:	eb 55       	subi	r30, 0x5B	; 91
     fac:	ff 4f       	sbci	r31, 0xFF	; 255
     fae:	60 81       	ld	r22, Z
     fb0:	71 81       	ldd	r23, Z+1	; 0x01
     fb2:	82 81       	ldd	r24, Z+2	; 0x02
     fb4:	93 81       	ldd	r25, Z+3	; 0x03
     fb6:	20 e0       	ldi	r18, 0x00	; 0
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	40 e2       	ldi	r20, 0x20	; 32
     fbc:	51 e4       	ldi	r21, 0x41	; 65
     fbe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fc2:	dc 01       	movw	r26, r24
     fc4:	cb 01       	movw	r24, r22
     fc6:	8e 01       	movw	r16, r28
     fc8:	01 56       	subi	r16, 0x61	; 97
     fca:	1f 4f       	sbci	r17, 0xFF	; 255
     fcc:	bc 01       	movw	r22, r24
     fce:	cd 01       	movw	r24, r26
     fd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     fd4:	dc 01       	movw	r26, r24
     fd6:	cb 01       	movw	r24, r22
     fd8:	f8 01       	movw	r30, r16
     fda:	91 83       	std	Z+1, r25	; 0x01
     fdc:	80 83       	st	Z, r24
     fde:	1f c0       	rjmp	.+62     	; 0x101e <main+0x1bc>
     fe0:	fe 01       	movw	r30, r28
     fe2:	e3 56       	subi	r30, 0x63	; 99
     fe4:	ff 4f       	sbci	r31, 0xFF	; 255
     fe6:	80 e9       	ldi	r24, 0x90	; 144
     fe8:	91 e0       	ldi	r25, 0x01	; 1
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
     fee:	fe 01       	movw	r30, r28
     ff0:	e3 56       	subi	r30, 0x63	; 99
     ff2:	ff 4f       	sbci	r31, 0xFF	; 255
     ff4:	80 81       	ld	r24, Z
     ff6:	91 81       	ldd	r25, Z+1	; 0x01
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	f1 f7       	brne	.-4      	; 0xff8 <main+0x196>
     ffc:	fe 01       	movw	r30, r28
     ffe:	e3 56       	subi	r30, 0x63	; 99
    1000:	ff 4f       	sbci	r31, 0xFF	; 255
    1002:	91 83       	std	Z+1, r25	; 0x01
    1004:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1006:	de 01       	movw	r26, r28
    1008:	a1 56       	subi	r26, 0x61	; 97
    100a:	bf 4f       	sbci	r27, 0xFF	; 255
    100c:	fe 01       	movw	r30, r28
    100e:	e1 56       	subi	r30, 0x61	; 97
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	80 81       	ld	r24, Z
    1014:	91 81       	ldd	r25, Z+1	; 0x01
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	11 96       	adiw	r26, 0x01	; 1
    101a:	9c 93       	st	X, r25
    101c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    101e:	fe 01       	movw	r30, r28
    1020:	e1 56       	subi	r30, 0x61	; 97
    1022:	ff 4f       	sbci	r31, 0xFF	; 255
    1024:	80 81       	ld	r24, Z
    1026:	91 81       	ldd	r25, Z+1	; 0x01
    1028:	00 97       	sbiw	r24, 0x00	; 0
    102a:	d1 f6       	brne	.-76     	; 0xfe0 <main+0x17e>
    102c:	27 c0       	rjmp	.+78     	; 0x107c <main+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    102e:	8e 01       	movw	r16, r28
    1030:	01 56       	subi	r16, 0x61	; 97
    1032:	1f 4f       	sbci	r17, 0xFF	; 255
    1034:	fe 01       	movw	r30, r28
    1036:	ef 55       	subi	r30, 0x5F	; 95
    1038:	ff 4f       	sbci	r31, 0xFF	; 255
    103a:	60 81       	ld	r22, Z
    103c:	71 81       	ldd	r23, Z+1	; 0x01
    103e:	82 81       	ldd	r24, Z+2	; 0x02
    1040:	93 81       	ldd	r25, Z+3	; 0x03
    1042:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	f8 01       	movw	r30, r16
    104c:	91 83       	std	Z+1, r25	; 0x01
    104e:	80 83       	st	Z, r24
    1050:	de 01       	movw	r26, r28
    1052:	a5 56       	subi	r26, 0x65	; 101
    1054:	bf 4f       	sbci	r27, 0xFF	; 255
    1056:	fe 01       	movw	r30, r28
    1058:	e1 56       	subi	r30, 0x61	; 97
    105a:	ff 4f       	sbci	r31, 0xFF	; 255
    105c:	80 81       	ld	r24, Z
    105e:	91 81       	ldd	r25, Z+1	; 0x01
    1060:	8d 93       	st	X+, r24
    1062:	9c 93       	st	X, r25
    1064:	fe 01       	movw	r30, r28
    1066:	e5 56       	subi	r30, 0x65	; 101
    1068:	ff 4f       	sbci	r31, 0xFF	; 255
    106a:	80 81       	ld	r24, Z
    106c:	91 81       	ldd	r25, Z+1	; 0x01
    106e:	01 97       	sbiw	r24, 0x01	; 1
    1070:	f1 f7       	brne	.-4      	; 0x106e <main+0x20c>
    1072:	fe 01       	movw	r30, r28
    1074:	e5 56       	subi	r30, 0x65	; 101
    1076:	ff 4f       	sbci	r31, 0xFF	; 255
    1078:	91 83       	std	Z+1, r25	; 0x01
    107a:	80 83       	st	Z, r24
		_delay_ms(2);

		hide_all_digits();
    107c:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (seconds_tens & 0x0F);
    1080:	a5 e3       	ldi	r26, 0x35	; 53
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e5 e3       	ldi	r30, 0x35	; 53
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 81       	ld	r24, Z
    108a:	98 2f       	mov	r25, r24
    108c:	90 7f       	andi	r25, 0xF0	; 240
    108e:	80 91 72 00 	lds	r24, 0x0072
    1092:	8f 70       	andi	r24, 0x0F	; 15
    1094:	89 2b       	or	r24, r25
    1096:	8c 93       	st	X, r24
		show_digit(4);
    1098:	84 e0       	ldi	r24, 0x04	; 4
    109a:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
    109e:	fe 01       	movw	r30, r28
    10a0:	e9 56       	subi	r30, 0x69	; 105
    10a2:	ff 4f       	sbci	r31, 0xFF	; 255
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	a0 e0       	ldi	r26, 0x00	; 0
    10aa:	b0 e4       	ldi	r27, 0x40	; 64
    10ac:	80 83       	st	Z, r24
    10ae:	91 83       	std	Z+1, r25	; 0x01
    10b0:	a2 83       	std	Z+2, r26	; 0x02
    10b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b4:	8e 01       	movw	r16, r28
    10b6:	0d 56       	subi	r16, 0x6D	; 109
    10b8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ba:	fe 01       	movw	r30, r28
    10bc:	e9 56       	subi	r30, 0x69	; 105
    10be:	ff 4f       	sbci	r31, 0xFF	; 255
    10c0:	60 81       	ld	r22, Z
    10c2:	71 81       	ldd	r23, Z+1	; 0x01
    10c4:	82 81       	ldd	r24, Z+2	; 0x02
    10c6:	93 81       	ldd	r25, Z+3	; 0x03
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	4a e7       	ldi	r20, 0x7A	; 122
    10ce:	55 e4       	ldi	r21, 0x45	; 69
    10d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10d4:	dc 01       	movw	r26, r24
    10d6:	cb 01       	movw	r24, r22
    10d8:	f8 01       	movw	r30, r16
    10da:	80 83       	st	Z, r24
    10dc:	91 83       	std	Z+1, r25	; 0x01
    10de:	a2 83       	std	Z+2, r26	; 0x02
    10e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10e2:	fe 01       	movw	r30, r28
    10e4:	ed 56       	subi	r30, 0x6D	; 109
    10e6:	ff 4f       	sbci	r31, 0xFF	; 255
    10e8:	60 81       	ld	r22, Z
    10ea:	71 81       	ldd	r23, Z+1	; 0x01
    10ec:	82 81       	ldd	r24, Z+2	; 0x02
    10ee:	93 81       	ldd	r25, Z+3	; 0x03
    10f0:	20 e0       	ldi	r18, 0x00	; 0
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	40 e8       	ldi	r20, 0x80	; 128
    10f6:	5f e3       	ldi	r21, 0x3F	; 63
    10f8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10fc:	88 23       	and	r24, r24
    10fe:	44 f4       	brge	.+16     	; 0x1110 <main+0x2ae>
		__ticks = 1;
    1100:	fe 01       	movw	r30, r28
    1102:	ef 56       	subi	r30, 0x6F	; 111
    1104:	ff 4f       	sbci	r31, 0xFF	; 255
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	91 83       	std	Z+1, r25	; 0x01
    110c:	80 83       	st	Z, r24
    110e:	64 c0       	rjmp	.+200    	; 0x11d8 <main+0x376>
	else if (__tmp > 65535)
    1110:	fe 01       	movw	r30, r28
    1112:	ed 56       	subi	r30, 0x6D	; 109
    1114:	ff 4f       	sbci	r31, 0xFF	; 255
    1116:	60 81       	ld	r22, Z
    1118:	71 81       	ldd	r23, Z+1	; 0x01
    111a:	82 81       	ldd	r24, Z+2	; 0x02
    111c:	93 81       	ldd	r25, Z+3	; 0x03
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	3f ef       	ldi	r19, 0xFF	; 255
    1122:	4f e7       	ldi	r20, 0x7F	; 127
    1124:	57 e4       	ldi	r21, 0x47	; 71
    1126:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    112a:	18 16       	cp	r1, r24
    112c:	0c f0       	brlt	.+2      	; 0x1130 <main+0x2ce>
    112e:	43 c0       	rjmp	.+134    	; 0x11b6 <main+0x354>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1130:	fe 01       	movw	r30, r28
    1132:	e9 56       	subi	r30, 0x69	; 105
    1134:	ff 4f       	sbci	r31, 0xFF	; 255
    1136:	60 81       	ld	r22, Z
    1138:	71 81       	ldd	r23, Z+1	; 0x01
    113a:	82 81       	ldd	r24, Z+2	; 0x02
    113c:	93 81       	ldd	r25, Z+3	; 0x03
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	40 e2       	ldi	r20, 0x20	; 32
    1144:	51 e4       	ldi	r21, 0x41	; 65
    1146:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    114a:	dc 01       	movw	r26, r24
    114c:	cb 01       	movw	r24, r22
    114e:	8e 01       	movw	r16, r28
    1150:	0f 56       	subi	r16, 0x6F	; 111
    1152:	1f 4f       	sbci	r17, 0xFF	; 255
    1154:	bc 01       	movw	r22, r24
    1156:	cd 01       	movw	r24, r26
    1158:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    115c:	dc 01       	movw	r26, r24
    115e:	cb 01       	movw	r24, r22
    1160:	f8 01       	movw	r30, r16
    1162:	91 83       	std	Z+1, r25	; 0x01
    1164:	80 83       	st	Z, r24
    1166:	1f c0       	rjmp	.+62     	; 0x11a6 <main+0x344>
    1168:	fe 01       	movw	r30, r28
    116a:	e1 57       	subi	r30, 0x71	; 113
    116c:	ff 4f       	sbci	r31, 0xFF	; 255
    116e:	80 e9       	ldi	r24, 0x90	; 144
    1170:	91 e0       	ldi	r25, 0x01	; 1
    1172:	91 83       	std	Z+1, r25	; 0x01
    1174:	80 83       	st	Z, r24
    1176:	fe 01       	movw	r30, r28
    1178:	e1 57       	subi	r30, 0x71	; 113
    117a:	ff 4f       	sbci	r31, 0xFF	; 255
    117c:	80 81       	ld	r24, Z
    117e:	91 81       	ldd	r25, Z+1	; 0x01
    1180:	01 97       	sbiw	r24, 0x01	; 1
    1182:	f1 f7       	brne	.-4      	; 0x1180 <main+0x31e>
    1184:	fe 01       	movw	r30, r28
    1186:	e1 57       	subi	r30, 0x71	; 113
    1188:	ff 4f       	sbci	r31, 0xFF	; 255
    118a:	91 83       	std	Z+1, r25	; 0x01
    118c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    118e:	de 01       	movw	r26, r28
    1190:	af 56       	subi	r26, 0x6F	; 111
    1192:	bf 4f       	sbci	r27, 0xFF	; 255
    1194:	fe 01       	movw	r30, r28
    1196:	ef 56       	subi	r30, 0x6F	; 111
    1198:	ff 4f       	sbci	r31, 0xFF	; 255
    119a:	80 81       	ld	r24, Z
    119c:	91 81       	ldd	r25, Z+1	; 0x01
    119e:	01 97       	sbiw	r24, 0x01	; 1
    11a0:	11 96       	adiw	r26, 0x01	; 1
    11a2:	9c 93       	st	X, r25
    11a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11a6:	fe 01       	movw	r30, r28
    11a8:	ef 56       	subi	r30, 0x6F	; 111
    11aa:	ff 4f       	sbci	r31, 0xFF	; 255
    11ac:	80 81       	ld	r24, Z
    11ae:	91 81       	ldd	r25, Z+1	; 0x01
    11b0:	00 97       	sbiw	r24, 0x00	; 0
    11b2:	d1 f6       	brne	.-76     	; 0x1168 <main+0x306>
    11b4:	27 c0       	rjmp	.+78     	; 0x1204 <main+0x3a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11b6:	8e 01       	movw	r16, r28
    11b8:	0f 56       	subi	r16, 0x6F	; 111
    11ba:	1f 4f       	sbci	r17, 0xFF	; 255
    11bc:	fe 01       	movw	r30, r28
    11be:	ed 56       	subi	r30, 0x6D	; 109
    11c0:	ff 4f       	sbci	r31, 0xFF	; 255
    11c2:	60 81       	ld	r22, Z
    11c4:	71 81       	ldd	r23, Z+1	; 0x01
    11c6:	82 81       	ldd	r24, Z+2	; 0x02
    11c8:	93 81       	ldd	r25, Z+3	; 0x03
    11ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11ce:	dc 01       	movw	r26, r24
    11d0:	cb 01       	movw	r24, r22
    11d2:	f8 01       	movw	r30, r16
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	80 83       	st	Z, r24
    11d8:	de 01       	movw	r26, r28
    11da:	a3 57       	subi	r26, 0x73	; 115
    11dc:	bf 4f       	sbci	r27, 0xFF	; 255
    11de:	fe 01       	movw	r30, r28
    11e0:	ef 56       	subi	r30, 0x6F	; 111
    11e2:	ff 4f       	sbci	r31, 0xFF	; 255
    11e4:	80 81       	ld	r24, Z
    11e6:	91 81       	ldd	r25, Z+1	; 0x01
    11e8:	8d 93       	st	X+, r24
    11ea:	9c 93       	st	X, r25
    11ec:	fe 01       	movw	r30, r28
    11ee:	e3 57       	subi	r30, 0x73	; 115
    11f0:	ff 4f       	sbci	r31, 0xFF	; 255
    11f2:	80 81       	ld	r24, Z
    11f4:	91 81       	ldd	r25, Z+1	; 0x01
    11f6:	01 97       	sbiw	r24, 0x01	; 1
    11f8:	f1 f7       	brne	.-4      	; 0x11f6 <main+0x394>
    11fa:	fe 01       	movw	r30, r28
    11fc:	e3 57       	subi	r30, 0x73	; 115
    11fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1200:	91 83       	std	Z+1, r25	; 0x01
    1202:	80 83       	st	Z, r24
		_delay_ms(2);

		hide_all_digits();
    1204:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (minutes_units & 0x0F);
    1208:	a5 e3       	ldi	r26, 0x35	; 53
    120a:	b0 e0       	ldi	r27, 0x00	; 0
    120c:	e5 e3       	ldi	r30, 0x35	; 53
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	80 81       	ld	r24, Z
    1212:	98 2f       	mov	r25, r24
    1214:	90 7f       	andi	r25, 0xF0	; 240
    1216:	80 91 73 00 	lds	r24, 0x0073
    121a:	8f 70       	andi	r24, 0x0F	; 15
    121c:	89 2b       	or	r24, r25
    121e:	8c 93       	st	X, r24
		show_digit(3);
    1220:	83 e0       	ldi	r24, 0x03	; 3
    1222:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
    1226:	fe 01       	movw	r30, r28
    1228:	e7 57       	subi	r30, 0x77	; 119
    122a:	ff 4f       	sbci	r31, 0xFF	; 255
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	a0 e0       	ldi	r26, 0x00	; 0
    1232:	b0 e4       	ldi	r27, 0x40	; 64
    1234:	80 83       	st	Z, r24
    1236:	91 83       	std	Z+1, r25	; 0x01
    1238:	a2 83       	std	Z+2, r26	; 0x02
    123a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    123c:	8e 01       	movw	r16, r28
    123e:	0b 57       	subi	r16, 0x7B	; 123
    1240:	1f 4f       	sbci	r17, 0xFF	; 255
    1242:	fe 01       	movw	r30, r28
    1244:	e7 57       	subi	r30, 0x77	; 119
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	60 81       	ld	r22, Z
    124a:	71 81       	ldd	r23, Z+1	; 0x01
    124c:	82 81       	ldd	r24, Z+2	; 0x02
    124e:	93 81       	ldd	r25, Z+3	; 0x03
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	4a e7       	ldi	r20, 0x7A	; 122
    1256:	55 e4       	ldi	r21, 0x45	; 69
    1258:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    125c:	dc 01       	movw	r26, r24
    125e:	cb 01       	movw	r24, r22
    1260:	f8 01       	movw	r30, r16
    1262:	80 83       	st	Z, r24
    1264:	91 83       	std	Z+1, r25	; 0x01
    1266:	a2 83       	std	Z+2, r26	; 0x02
    1268:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    126a:	fe 01       	movw	r30, r28
    126c:	eb 57       	subi	r30, 0x7B	; 123
    126e:	ff 4f       	sbci	r31, 0xFF	; 255
    1270:	60 81       	ld	r22, Z
    1272:	71 81       	ldd	r23, Z+1	; 0x01
    1274:	82 81       	ldd	r24, Z+2	; 0x02
    1276:	93 81       	ldd	r25, Z+3	; 0x03
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	40 e8       	ldi	r20, 0x80	; 128
    127e:	5f e3       	ldi	r21, 0x3F	; 63
    1280:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1284:	88 23       	and	r24, r24
    1286:	44 f4       	brge	.+16     	; 0x1298 <main+0x436>
		__ticks = 1;
    1288:	fe 01       	movw	r30, r28
    128a:	ed 57       	subi	r30, 0x7D	; 125
    128c:	ff 4f       	sbci	r31, 0xFF	; 255
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	91 83       	std	Z+1, r25	; 0x01
    1294:	80 83       	st	Z, r24
    1296:	64 c0       	rjmp	.+200    	; 0x1360 <main+0x4fe>
	else if (__tmp > 65535)
    1298:	fe 01       	movw	r30, r28
    129a:	eb 57       	subi	r30, 0x7B	; 123
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	60 81       	ld	r22, Z
    12a0:	71 81       	ldd	r23, Z+1	; 0x01
    12a2:	82 81       	ldd	r24, Z+2	; 0x02
    12a4:	93 81       	ldd	r25, Z+3	; 0x03
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	3f ef       	ldi	r19, 0xFF	; 255
    12aa:	4f e7       	ldi	r20, 0x7F	; 127
    12ac:	57 e4       	ldi	r21, 0x47	; 71
    12ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    12b2:	18 16       	cp	r1, r24
    12b4:	0c f0       	brlt	.+2      	; 0x12b8 <main+0x456>
    12b6:	43 c0       	rjmp	.+134    	; 0x133e <main+0x4dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12b8:	fe 01       	movw	r30, r28
    12ba:	e7 57       	subi	r30, 0x77	; 119
    12bc:	ff 4f       	sbci	r31, 0xFF	; 255
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	20 e0       	ldi	r18, 0x00	; 0
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	40 e2       	ldi	r20, 0x20	; 32
    12cc:	51 e4       	ldi	r21, 0x41	; 65
    12ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12d2:	dc 01       	movw	r26, r24
    12d4:	cb 01       	movw	r24, r22
    12d6:	8e 01       	movw	r16, r28
    12d8:	0d 57       	subi	r16, 0x7D	; 125
    12da:	1f 4f       	sbci	r17, 0xFF	; 255
    12dc:	bc 01       	movw	r22, r24
    12de:	cd 01       	movw	r24, r26
    12e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12e4:	dc 01       	movw	r26, r24
    12e6:	cb 01       	movw	r24, r22
    12e8:	f8 01       	movw	r30, r16
    12ea:	91 83       	std	Z+1, r25	; 0x01
    12ec:	80 83       	st	Z, r24
    12ee:	1f c0       	rjmp	.+62     	; 0x132e <main+0x4cc>
    12f0:	fe 01       	movw	r30, r28
    12f2:	ef 57       	subi	r30, 0x7F	; 127
    12f4:	ff 4f       	sbci	r31, 0xFF	; 255
    12f6:	80 e9       	ldi	r24, 0x90	; 144
    12f8:	91 e0       	ldi	r25, 0x01	; 1
    12fa:	91 83       	std	Z+1, r25	; 0x01
    12fc:	80 83       	st	Z, r24
    12fe:	fe 01       	movw	r30, r28
    1300:	ef 57       	subi	r30, 0x7F	; 127
    1302:	ff 4f       	sbci	r31, 0xFF	; 255
    1304:	80 81       	ld	r24, Z
    1306:	91 81       	ldd	r25, Z+1	; 0x01
    1308:	01 97       	sbiw	r24, 0x01	; 1
    130a:	f1 f7       	brne	.-4      	; 0x1308 <main+0x4a6>
    130c:	fe 01       	movw	r30, r28
    130e:	ef 57       	subi	r30, 0x7F	; 127
    1310:	ff 4f       	sbci	r31, 0xFF	; 255
    1312:	91 83       	std	Z+1, r25	; 0x01
    1314:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1316:	de 01       	movw	r26, r28
    1318:	ad 57       	subi	r26, 0x7D	; 125
    131a:	bf 4f       	sbci	r27, 0xFF	; 255
    131c:	fe 01       	movw	r30, r28
    131e:	ed 57       	subi	r30, 0x7D	; 125
    1320:	ff 4f       	sbci	r31, 0xFF	; 255
    1322:	80 81       	ld	r24, Z
    1324:	91 81       	ldd	r25, Z+1	; 0x01
    1326:	01 97       	sbiw	r24, 0x01	; 1
    1328:	11 96       	adiw	r26, 0x01	; 1
    132a:	9c 93       	st	X, r25
    132c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    132e:	fe 01       	movw	r30, r28
    1330:	ed 57       	subi	r30, 0x7D	; 125
    1332:	ff 4f       	sbci	r31, 0xFF	; 255
    1334:	80 81       	ld	r24, Z
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	00 97       	sbiw	r24, 0x00	; 0
    133a:	d1 f6       	brne	.-76     	; 0x12f0 <main+0x48e>
    133c:	27 c0       	rjmp	.+78     	; 0x138c <main+0x52a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    133e:	8e 01       	movw	r16, r28
    1340:	0d 57       	subi	r16, 0x7D	; 125
    1342:	1f 4f       	sbci	r17, 0xFF	; 255
    1344:	fe 01       	movw	r30, r28
    1346:	eb 57       	subi	r30, 0x7B	; 123
    1348:	ff 4f       	sbci	r31, 0xFF	; 255
    134a:	60 81       	ld	r22, Z
    134c:	71 81       	ldd	r23, Z+1	; 0x01
    134e:	82 81       	ldd	r24, Z+2	; 0x02
    1350:	93 81       	ldd	r25, Z+3	; 0x03
    1352:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1356:	dc 01       	movw	r26, r24
    1358:	cb 01       	movw	r24, r22
    135a:	f8 01       	movw	r30, r16
    135c:	91 83       	std	Z+1, r25	; 0x01
    135e:	80 83       	st	Z, r24
    1360:	de 01       	movw	r26, r28
    1362:	a1 58       	subi	r26, 0x81	; 129
    1364:	bf 4f       	sbci	r27, 0xFF	; 255
    1366:	fe 01       	movw	r30, r28
    1368:	ed 57       	subi	r30, 0x7D	; 125
    136a:	ff 4f       	sbci	r31, 0xFF	; 255
    136c:	80 81       	ld	r24, Z
    136e:	91 81       	ldd	r25, Z+1	; 0x01
    1370:	8d 93       	st	X+, r24
    1372:	9c 93       	st	X, r25
    1374:	fe 01       	movw	r30, r28
    1376:	e1 58       	subi	r30, 0x81	; 129
    1378:	ff 4f       	sbci	r31, 0xFF	; 255
    137a:	80 81       	ld	r24, Z
    137c:	91 81       	ldd	r25, Z+1	; 0x01
    137e:	01 97       	sbiw	r24, 0x01	; 1
    1380:	f1 f7       	brne	.-4      	; 0x137e <main+0x51c>
    1382:	fe 01       	movw	r30, r28
    1384:	e1 58       	subi	r30, 0x81	; 129
    1386:	ff 4f       	sbci	r31, 0xFF	; 255
    1388:	91 83       	std	Z+1, r25	; 0x01
    138a:	80 83       	st	Z, r24
		_delay_ms(2);

		hide_all_digits();
    138c:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (minutes_tens & 0x0F);
    1390:	a5 e3       	ldi	r26, 0x35	; 53
    1392:	b0 e0       	ldi	r27, 0x00	; 0
    1394:	e5 e3       	ldi	r30, 0x35	; 53
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	80 81       	ld	r24, Z
    139a:	98 2f       	mov	r25, r24
    139c:	90 7f       	andi	r25, 0xF0	; 240
    139e:	80 91 74 00 	lds	r24, 0x0074
    13a2:	8f 70       	andi	r24, 0x0F	; 15
    13a4:	89 2b       	or	r24, r25
    13a6:	8c 93       	st	X, r24
		show_digit(2);
    13a8:	82 e0       	ldi	r24, 0x02	; 2
    13aa:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
    13ae:	fe 01       	movw	r30, r28
    13b0:	e5 58       	subi	r30, 0x85	; 133
    13b2:	ff 4f       	sbci	r31, 0xFF	; 255
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	a0 e0       	ldi	r26, 0x00	; 0
    13ba:	b0 e4       	ldi	r27, 0x40	; 64
    13bc:	80 83       	st	Z, r24
    13be:	91 83       	std	Z+1, r25	; 0x01
    13c0:	a2 83       	std	Z+2, r26	; 0x02
    13c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13c4:	8e 01       	movw	r16, r28
    13c6:	09 58       	subi	r16, 0x89	; 137
    13c8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ca:	fe 01       	movw	r30, r28
    13cc:	e5 58       	subi	r30, 0x85	; 133
    13ce:	ff 4f       	sbci	r31, 0xFF	; 255
    13d0:	60 81       	ld	r22, Z
    13d2:	71 81       	ldd	r23, Z+1	; 0x01
    13d4:	82 81       	ldd	r24, Z+2	; 0x02
    13d6:	93 81       	ldd	r25, Z+3	; 0x03
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	4a e7       	ldi	r20, 0x7A	; 122
    13de:	55 e4       	ldi	r21, 0x45	; 69
    13e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13e4:	dc 01       	movw	r26, r24
    13e6:	cb 01       	movw	r24, r22
    13e8:	f8 01       	movw	r30, r16
    13ea:	80 83       	st	Z, r24
    13ec:	91 83       	std	Z+1, r25	; 0x01
    13ee:	a2 83       	std	Z+2, r26	; 0x02
    13f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13f2:	fe 01       	movw	r30, r28
    13f4:	e9 58       	subi	r30, 0x89	; 137
    13f6:	ff 4f       	sbci	r31, 0xFF	; 255
    13f8:	60 81       	ld	r22, Z
    13fa:	71 81       	ldd	r23, Z+1	; 0x01
    13fc:	82 81       	ldd	r24, Z+2	; 0x02
    13fe:	93 81       	ldd	r25, Z+3	; 0x03
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	40 e8       	ldi	r20, 0x80	; 128
    1406:	5f e3       	ldi	r21, 0x3F	; 63
    1408:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    140c:	88 23       	and	r24, r24
    140e:	44 f4       	brge	.+16     	; 0x1420 <main+0x5be>
		__ticks = 1;
    1410:	fe 01       	movw	r30, r28
    1412:	eb 58       	subi	r30, 0x8B	; 139
    1414:	ff 4f       	sbci	r31, 0xFF	; 255
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	91 83       	std	Z+1, r25	; 0x01
    141c:	80 83       	st	Z, r24
    141e:	64 c0       	rjmp	.+200    	; 0x14e8 <main+0x686>
	else if (__tmp > 65535)
    1420:	fe 01       	movw	r30, r28
    1422:	e9 58       	subi	r30, 0x89	; 137
    1424:	ff 4f       	sbci	r31, 0xFF	; 255
    1426:	60 81       	ld	r22, Z
    1428:	71 81       	ldd	r23, Z+1	; 0x01
    142a:	82 81       	ldd	r24, Z+2	; 0x02
    142c:	93 81       	ldd	r25, Z+3	; 0x03
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	3f ef       	ldi	r19, 0xFF	; 255
    1432:	4f e7       	ldi	r20, 0x7F	; 127
    1434:	57 e4       	ldi	r21, 0x47	; 71
    1436:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    143a:	18 16       	cp	r1, r24
    143c:	0c f0       	brlt	.+2      	; 0x1440 <main+0x5de>
    143e:	43 c0       	rjmp	.+134    	; 0x14c6 <main+0x664>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1440:	fe 01       	movw	r30, r28
    1442:	e5 58       	subi	r30, 0x85	; 133
    1444:	ff 4f       	sbci	r31, 0xFF	; 255
    1446:	60 81       	ld	r22, Z
    1448:	71 81       	ldd	r23, Z+1	; 0x01
    144a:	82 81       	ldd	r24, Z+2	; 0x02
    144c:	93 81       	ldd	r25, Z+3	; 0x03
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e2       	ldi	r20, 0x20	; 32
    1454:	51 e4       	ldi	r21, 0x41	; 65
    1456:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    145a:	dc 01       	movw	r26, r24
    145c:	cb 01       	movw	r24, r22
    145e:	8e 01       	movw	r16, r28
    1460:	0b 58       	subi	r16, 0x8B	; 139
    1462:	1f 4f       	sbci	r17, 0xFF	; 255
    1464:	bc 01       	movw	r22, r24
    1466:	cd 01       	movw	r24, r26
    1468:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    146c:	dc 01       	movw	r26, r24
    146e:	cb 01       	movw	r24, r22
    1470:	f8 01       	movw	r30, r16
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	80 83       	st	Z, r24
    1476:	1f c0       	rjmp	.+62     	; 0x14b6 <main+0x654>
    1478:	fe 01       	movw	r30, r28
    147a:	ed 58       	subi	r30, 0x8D	; 141
    147c:	ff 4f       	sbci	r31, 0xFF	; 255
    147e:	80 e9       	ldi	r24, 0x90	; 144
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	80 83       	st	Z, r24
    1486:	fe 01       	movw	r30, r28
    1488:	ed 58       	subi	r30, 0x8D	; 141
    148a:	ff 4f       	sbci	r31, 0xFF	; 255
    148c:	80 81       	ld	r24, Z
    148e:	91 81       	ldd	r25, Z+1	; 0x01
    1490:	01 97       	sbiw	r24, 0x01	; 1
    1492:	f1 f7       	brne	.-4      	; 0x1490 <main+0x62e>
    1494:	fe 01       	movw	r30, r28
    1496:	ed 58       	subi	r30, 0x8D	; 141
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	91 83       	std	Z+1, r25	; 0x01
    149c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    149e:	de 01       	movw	r26, r28
    14a0:	ab 58       	subi	r26, 0x8B	; 139
    14a2:	bf 4f       	sbci	r27, 0xFF	; 255
    14a4:	fe 01       	movw	r30, r28
    14a6:	eb 58       	subi	r30, 0x8B	; 139
    14a8:	ff 4f       	sbci	r31, 0xFF	; 255
    14aa:	80 81       	ld	r24, Z
    14ac:	91 81       	ldd	r25, Z+1	; 0x01
    14ae:	01 97       	sbiw	r24, 0x01	; 1
    14b0:	11 96       	adiw	r26, 0x01	; 1
    14b2:	9c 93       	st	X, r25
    14b4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14b6:	fe 01       	movw	r30, r28
    14b8:	eb 58       	subi	r30, 0x8B	; 139
    14ba:	ff 4f       	sbci	r31, 0xFF	; 255
    14bc:	80 81       	ld	r24, Z
    14be:	91 81       	ldd	r25, Z+1	; 0x01
    14c0:	00 97       	sbiw	r24, 0x00	; 0
    14c2:	d1 f6       	brne	.-76     	; 0x1478 <main+0x616>
    14c4:	27 c0       	rjmp	.+78     	; 0x1514 <main+0x6b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14c6:	8e 01       	movw	r16, r28
    14c8:	0b 58       	subi	r16, 0x8B	; 139
    14ca:	1f 4f       	sbci	r17, 0xFF	; 255
    14cc:	fe 01       	movw	r30, r28
    14ce:	e9 58       	subi	r30, 0x89	; 137
    14d0:	ff 4f       	sbci	r31, 0xFF	; 255
    14d2:	60 81       	ld	r22, Z
    14d4:	71 81       	ldd	r23, Z+1	; 0x01
    14d6:	82 81       	ldd	r24, Z+2	; 0x02
    14d8:	93 81       	ldd	r25, Z+3	; 0x03
    14da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	f8 01       	movw	r30, r16
    14e4:	91 83       	std	Z+1, r25	; 0x01
    14e6:	80 83       	st	Z, r24
    14e8:	de 01       	movw	r26, r28
    14ea:	af 58       	subi	r26, 0x8F	; 143
    14ec:	bf 4f       	sbci	r27, 0xFF	; 255
    14ee:	fe 01       	movw	r30, r28
    14f0:	eb 58       	subi	r30, 0x8B	; 139
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	80 81       	ld	r24, Z
    14f6:	91 81       	ldd	r25, Z+1	; 0x01
    14f8:	8d 93       	st	X+, r24
    14fa:	9c 93       	st	X, r25
    14fc:	fe 01       	movw	r30, r28
    14fe:	ef 58       	subi	r30, 0x8F	; 143
    1500:	ff 4f       	sbci	r31, 0xFF	; 255
    1502:	80 81       	ld	r24, Z
    1504:	91 81       	ldd	r25, Z+1	; 0x01
    1506:	01 97       	sbiw	r24, 0x01	; 1
    1508:	f1 f7       	brne	.-4      	; 0x1506 <main+0x6a4>
    150a:	fe 01       	movw	r30, r28
    150c:	ef 58       	subi	r30, 0x8F	; 143
    150e:	ff 4f       	sbci	r31, 0xFF	; 255
    1510:	91 83       	std	Z+1, r25	; 0x01
    1512:	80 83       	st	Z, r24
		_delay_ms(2);

		hide_all_digits();
    1514:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (hours_units & 0x0F);
    1518:	a5 e3       	ldi	r26, 0x35	; 53
    151a:	b0 e0       	ldi	r27, 0x00	; 0
    151c:	e5 e3       	ldi	r30, 0x35	; 53
    151e:	f0 e0       	ldi	r31, 0x00	; 0
    1520:	80 81       	ld	r24, Z
    1522:	98 2f       	mov	r25, r24
    1524:	90 7f       	andi	r25, 0xF0	; 240
    1526:	80 91 75 00 	lds	r24, 0x0075
    152a:	8f 70       	andi	r24, 0x0F	; 15
    152c:	89 2b       	or	r24, r25
    152e:	8c 93       	st	X, r24
		show_digit(1);
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
    1536:	fe 01       	movw	r30, r28
    1538:	e3 59       	subi	r30, 0x93	; 147
    153a:	ff 4f       	sbci	r31, 0xFF	; 255
    153c:	80 e0       	ldi	r24, 0x00	; 0
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	a0 e0       	ldi	r26, 0x00	; 0
    1542:	b0 e4       	ldi	r27, 0x40	; 64
    1544:	80 83       	st	Z, r24
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	a2 83       	std	Z+2, r26	; 0x02
    154a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    154c:	8e 01       	movw	r16, r28
    154e:	07 59       	subi	r16, 0x97	; 151
    1550:	1f 4f       	sbci	r17, 0xFF	; 255
    1552:	fe 01       	movw	r30, r28
    1554:	e3 59       	subi	r30, 0x93	; 147
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	60 81       	ld	r22, Z
    155a:	71 81       	ldd	r23, Z+1	; 0x01
    155c:	82 81       	ldd	r24, Z+2	; 0x02
    155e:	93 81       	ldd	r25, Z+3	; 0x03
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	4a e7       	ldi	r20, 0x7A	; 122
    1566:	55 e4       	ldi	r21, 0x45	; 69
    1568:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    156c:	dc 01       	movw	r26, r24
    156e:	cb 01       	movw	r24, r22
    1570:	f8 01       	movw	r30, r16
    1572:	80 83       	st	Z, r24
    1574:	91 83       	std	Z+1, r25	; 0x01
    1576:	a2 83       	std	Z+2, r26	; 0x02
    1578:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    157a:	fe 01       	movw	r30, r28
    157c:	e7 59       	subi	r30, 0x97	; 151
    157e:	ff 4f       	sbci	r31, 0xFF	; 255
    1580:	60 81       	ld	r22, Z
    1582:	71 81       	ldd	r23, Z+1	; 0x01
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	40 e8       	ldi	r20, 0x80	; 128
    158e:	5f e3       	ldi	r21, 0x3F	; 63
    1590:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1594:	88 23       	and	r24, r24
    1596:	44 f4       	brge	.+16     	; 0x15a8 <main+0x746>
		__ticks = 1;
    1598:	fe 01       	movw	r30, r28
    159a:	e9 59       	subi	r30, 0x99	; 153
    159c:	ff 4f       	sbci	r31, 0xFF	; 255
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	91 83       	std	Z+1, r25	; 0x01
    15a4:	80 83       	st	Z, r24
    15a6:	64 c0       	rjmp	.+200    	; 0x1670 <main+0x80e>
	else if (__tmp > 65535)
    15a8:	fe 01       	movw	r30, r28
    15aa:	e7 59       	subi	r30, 0x97	; 151
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	3f ef       	ldi	r19, 0xFF	; 255
    15ba:	4f e7       	ldi	r20, 0x7F	; 127
    15bc:	57 e4       	ldi	r21, 0x47	; 71
    15be:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    15c2:	18 16       	cp	r1, r24
    15c4:	0c f0       	brlt	.+2      	; 0x15c8 <main+0x766>
    15c6:	43 c0       	rjmp	.+134    	; 0x164e <main+0x7ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c8:	fe 01       	movw	r30, r28
    15ca:	e3 59       	subi	r30, 0x93	; 147
    15cc:	ff 4f       	sbci	r31, 0xFF	; 255
    15ce:	60 81       	ld	r22, Z
    15d0:	71 81       	ldd	r23, Z+1	; 0x01
    15d2:	82 81       	ldd	r24, Z+2	; 0x02
    15d4:	93 81       	ldd	r25, Z+3	; 0x03
    15d6:	20 e0       	ldi	r18, 0x00	; 0
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	40 e2       	ldi	r20, 0x20	; 32
    15dc:	51 e4       	ldi	r21, 0x41	; 65
    15de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	8e 01       	movw	r16, r28
    15e8:	09 59       	subi	r16, 0x99	; 153
    15ea:	1f 4f       	sbci	r17, 0xFF	; 255
    15ec:	bc 01       	movw	r22, r24
    15ee:	cd 01       	movw	r24, r26
    15f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15f4:	dc 01       	movw	r26, r24
    15f6:	cb 01       	movw	r24, r22
    15f8:	f8 01       	movw	r30, r16
    15fa:	91 83       	std	Z+1, r25	; 0x01
    15fc:	80 83       	st	Z, r24
    15fe:	1f c0       	rjmp	.+62     	; 0x163e <main+0x7dc>
    1600:	fe 01       	movw	r30, r28
    1602:	eb 59       	subi	r30, 0x9B	; 155
    1604:	ff 4f       	sbci	r31, 0xFF	; 255
    1606:	80 e9       	ldi	r24, 0x90	; 144
    1608:	91 e0       	ldi	r25, 0x01	; 1
    160a:	91 83       	std	Z+1, r25	; 0x01
    160c:	80 83       	st	Z, r24
    160e:	fe 01       	movw	r30, r28
    1610:	eb 59       	subi	r30, 0x9B	; 155
    1612:	ff 4f       	sbci	r31, 0xFF	; 255
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	01 97       	sbiw	r24, 0x01	; 1
    161a:	f1 f7       	brne	.-4      	; 0x1618 <main+0x7b6>
    161c:	fe 01       	movw	r30, r28
    161e:	eb 59       	subi	r30, 0x9B	; 155
    1620:	ff 4f       	sbci	r31, 0xFF	; 255
    1622:	91 83       	std	Z+1, r25	; 0x01
    1624:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1626:	de 01       	movw	r26, r28
    1628:	a9 59       	subi	r26, 0x99	; 153
    162a:	bf 4f       	sbci	r27, 0xFF	; 255
    162c:	fe 01       	movw	r30, r28
    162e:	e9 59       	subi	r30, 0x99	; 153
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	80 81       	ld	r24, Z
    1634:	91 81       	ldd	r25, Z+1	; 0x01
    1636:	01 97       	sbiw	r24, 0x01	; 1
    1638:	11 96       	adiw	r26, 0x01	; 1
    163a:	9c 93       	st	X, r25
    163c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163e:	fe 01       	movw	r30, r28
    1640:	e9 59       	subi	r30, 0x99	; 153
    1642:	ff 4f       	sbci	r31, 0xFF	; 255
    1644:	80 81       	ld	r24, Z
    1646:	91 81       	ldd	r25, Z+1	; 0x01
    1648:	00 97       	sbiw	r24, 0x00	; 0
    164a:	d1 f6       	brne	.-76     	; 0x1600 <main+0x79e>
    164c:	27 c0       	rjmp	.+78     	; 0x169c <main+0x83a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    164e:	8e 01       	movw	r16, r28
    1650:	09 59       	subi	r16, 0x99	; 153
    1652:	1f 4f       	sbci	r17, 0xFF	; 255
    1654:	fe 01       	movw	r30, r28
    1656:	e7 59       	subi	r30, 0x97	; 151
    1658:	ff 4f       	sbci	r31, 0xFF	; 255
    165a:	60 81       	ld	r22, Z
    165c:	71 81       	ldd	r23, Z+1	; 0x01
    165e:	82 81       	ldd	r24, Z+2	; 0x02
    1660:	93 81       	ldd	r25, Z+3	; 0x03
    1662:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	f8 01       	movw	r30, r16
    166c:	91 83       	std	Z+1, r25	; 0x01
    166e:	80 83       	st	Z, r24
    1670:	de 01       	movw	r26, r28
    1672:	ad 59       	subi	r26, 0x9D	; 157
    1674:	bf 4f       	sbci	r27, 0xFF	; 255
    1676:	fe 01       	movw	r30, r28
    1678:	e9 59       	subi	r30, 0x99	; 153
    167a:	ff 4f       	sbci	r31, 0xFF	; 255
    167c:	80 81       	ld	r24, Z
    167e:	91 81       	ldd	r25, Z+1	; 0x01
    1680:	8d 93       	st	X+, r24
    1682:	9c 93       	st	X, r25
    1684:	fe 01       	movw	r30, r28
    1686:	ed 59       	subi	r30, 0x9D	; 157
    1688:	ff 4f       	sbci	r31, 0xFF	; 255
    168a:	80 81       	ld	r24, Z
    168c:	91 81       	ldd	r25, Z+1	; 0x01
    168e:	01 97       	sbiw	r24, 0x01	; 1
    1690:	f1 f7       	brne	.-4      	; 0x168e <main+0x82c>
    1692:	fe 01       	movw	r30, r28
    1694:	ed 59       	subi	r30, 0x9D	; 157
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	91 83       	std	Z+1, r25	; 0x01
    169a:	80 83       	st	Z, r24
		_delay_ms(2);

		hide_all_digits();
    169c:	0e 94 ca 05 	call	0xb94	; 0xb94 <hide_all_digits>
		PORTC = (PORTC & 0xF0) | (hours_tens & 0x0F);
    16a0:	a5 e3       	ldi	r26, 0x35	; 53
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e5 e3       	ldi	r30, 0x35	; 53
    16a6:	f0 e0       	ldi	r31, 0x00	; 0
    16a8:	80 81       	ld	r24, Z
    16aa:	98 2f       	mov	r25, r24
    16ac:	90 7f       	andi	r25, 0xF0	; 240
    16ae:	80 91 76 00 	lds	r24, 0x0076
    16b2:	8f 70       	andi	r24, 0x0F	; 15
    16b4:	89 2b       	or	r24, r25
    16b6:	8c 93       	st	X, r24
		show_digit(0);
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <show_digit>
    16be:	fe 01       	movw	r30, r28
    16c0:	e1 5a       	subi	r30, 0xA1	; 161
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	80 e0       	ldi	r24, 0x00	; 0
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	a0 e0       	ldi	r26, 0x00	; 0
    16ca:	b0 e4       	ldi	r27, 0x40	; 64
    16cc:	80 83       	st	Z, r24
    16ce:	91 83       	std	Z+1, r25	; 0x01
    16d0:	a2 83       	std	Z+2, r26	; 0x02
    16d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16d4:	8e 01       	movw	r16, r28
    16d6:	05 5a       	subi	r16, 0xA5	; 165
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	fe 01       	movw	r30, r28
    16dc:	e1 5a       	subi	r30, 0xA1	; 161
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	60 81       	ld	r22, Z
    16e2:	71 81       	ldd	r23, Z+1	; 0x01
    16e4:	82 81       	ldd	r24, Z+2	; 0x02
    16e6:	93 81       	ldd	r25, Z+3	; 0x03
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	4a e7       	ldi	r20, 0x7A	; 122
    16ee:	55 e4       	ldi	r21, 0x45	; 69
    16f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16f4:	dc 01       	movw	r26, r24
    16f6:	cb 01       	movw	r24, r22
    16f8:	f8 01       	movw	r30, r16
    16fa:	80 83       	st	Z, r24
    16fc:	91 83       	std	Z+1, r25	; 0x01
    16fe:	a2 83       	std	Z+2, r26	; 0x02
    1700:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1702:	fe 01       	movw	r30, r28
    1704:	e5 5a       	subi	r30, 0xA5	; 165
    1706:	ff 4f       	sbci	r31, 0xFF	; 255
    1708:	60 81       	ld	r22, Z
    170a:	71 81       	ldd	r23, Z+1	; 0x01
    170c:	82 81       	ldd	r24, Z+2	; 0x02
    170e:	93 81       	ldd	r25, Z+3	; 0x03
    1710:	20 e0       	ldi	r18, 0x00	; 0
    1712:	30 e0       	ldi	r19, 0x00	; 0
    1714:	40 e8       	ldi	r20, 0x80	; 128
    1716:	5f e3       	ldi	r21, 0x3F	; 63
    1718:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    171c:	88 23       	and	r24, r24
    171e:	44 f4       	brge	.+16     	; 0x1730 <main+0x8ce>
		__ticks = 1;
    1720:	fe 01       	movw	r30, r28
    1722:	e7 5a       	subi	r30, 0xA7	; 167
    1724:	ff 4f       	sbci	r31, 0xFF	; 255
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	91 83       	std	Z+1, r25	; 0x01
    172c:	80 83       	st	Z, r24
    172e:	64 c0       	rjmp	.+200    	; 0x17f8 <main+0x996>
	else if (__tmp > 65535)
    1730:	fe 01       	movw	r30, r28
    1732:	e5 5a       	subi	r30, 0xA5	; 165
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	60 81       	ld	r22, Z
    1738:	71 81       	ldd	r23, Z+1	; 0x01
    173a:	82 81       	ldd	r24, Z+2	; 0x02
    173c:	93 81       	ldd	r25, Z+3	; 0x03
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	3f ef       	ldi	r19, 0xFF	; 255
    1742:	4f e7       	ldi	r20, 0x7F	; 127
    1744:	57 e4       	ldi	r21, 0x47	; 71
    1746:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    174a:	18 16       	cp	r1, r24
    174c:	0c f0       	brlt	.+2      	; 0x1750 <main+0x8ee>
    174e:	43 c0       	rjmp	.+134    	; 0x17d6 <main+0x974>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1750:	fe 01       	movw	r30, r28
    1752:	e1 5a       	subi	r30, 0xA1	; 161
    1754:	ff 4f       	sbci	r31, 0xFF	; 255
    1756:	60 81       	ld	r22, Z
    1758:	71 81       	ldd	r23, Z+1	; 0x01
    175a:	82 81       	ldd	r24, Z+2	; 0x02
    175c:	93 81       	ldd	r25, Z+3	; 0x03
    175e:	20 e0       	ldi	r18, 0x00	; 0
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	40 e2       	ldi	r20, 0x20	; 32
    1764:	51 e4       	ldi	r21, 0x41	; 65
    1766:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    176a:	dc 01       	movw	r26, r24
    176c:	cb 01       	movw	r24, r22
    176e:	8e 01       	movw	r16, r28
    1770:	07 5a       	subi	r16, 0xA7	; 167
    1772:	1f 4f       	sbci	r17, 0xFF	; 255
    1774:	bc 01       	movw	r22, r24
    1776:	cd 01       	movw	r24, r26
    1778:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	f8 01       	movw	r30, r16
    1782:	91 83       	std	Z+1, r25	; 0x01
    1784:	80 83       	st	Z, r24
    1786:	1f c0       	rjmp	.+62     	; 0x17c6 <main+0x964>
    1788:	fe 01       	movw	r30, r28
    178a:	e9 5a       	subi	r30, 0xA9	; 169
    178c:	ff 4f       	sbci	r31, 0xFF	; 255
    178e:	80 e9       	ldi	r24, 0x90	; 144
    1790:	91 e0       	ldi	r25, 0x01	; 1
    1792:	91 83       	std	Z+1, r25	; 0x01
    1794:	80 83       	st	Z, r24
    1796:	fe 01       	movw	r30, r28
    1798:	e9 5a       	subi	r30, 0xA9	; 169
    179a:	ff 4f       	sbci	r31, 0xFF	; 255
    179c:	80 81       	ld	r24, Z
    179e:	91 81       	ldd	r25, Z+1	; 0x01
    17a0:	01 97       	sbiw	r24, 0x01	; 1
    17a2:	f1 f7       	brne	.-4      	; 0x17a0 <main+0x93e>
    17a4:	fe 01       	movw	r30, r28
    17a6:	e9 5a       	subi	r30, 0xA9	; 169
    17a8:	ff 4f       	sbci	r31, 0xFF	; 255
    17aa:	91 83       	std	Z+1, r25	; 0x01
    17ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ae:	de 01       	movw	r26, r28
    17b0:	a7 5a       	subi	r26, 0xA7	; 167
    17b2:	bf 4f       	sbci	r27, 0xFF	; 255
    17b4:	fe 01       	movw	r30, r28
    17b6:	e7 5a       	subi	r30, 0xA7	; 167
    17b8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ba:	80 81       	ld	r24, Z
    17bc:	91 81       	ldd	r25, Z+1	; 0x01
    17be:	01 97       	sbiw	r24, 0x01	; 1
    17c0:	11 96       	adiw	r26, 0x01	; 1
    17c2:	9c 93       	st	X, r25
    17c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17c6:	fe 01       	movw	r30, r28
    17c8:	e7 5a       	subi	r30, 0xA7	; 167
    17ca:	ff 4f       	sbci	r31, 0xFF	; 255
    17cc:	80 81       	ld	r24, Z
    17ce:	91 81       	ldd	r25, Z+1	; 0x01
    17d0:	00 97       	sbiw	r24, 0x00	; 0
    17d2:	d1 f6       	brne	.-76     	; 0x1788 <main+0x926>
    17d4:	27 c0       	rjmp	.+78     	; 0x1824 <main+0x9c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17d6:	8e 01       	movw	r16, r28
    17d8:	07 5a       	subi	r16, 0xA7	; 167
    17da:	1f 4f       	sbci	r17, 0xFF	; 255
    17dc:	fe 01       	movw	r30, r28
    17de:	e5 5a       	subi	r30, 0xA5	; 165
    17e0:	ff 4f       	sbci	r31, 0xFF	; 255
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	f8 01       	movw	r30, r16
    17f4:	91 83       	std	Z+1, r25	; 0x01
    17f6:	80 83       	st	Z, r24
    17f8:	de 01       	movw	r26, r28
    17fa:	ab 5a       	subi	r26, 0xAB	; 171
    17fc:	bf 4f       	sbci	r27, 0xFF	; 255
    17fe:	fe 01       	movw	r30, r28
    1800:	e7 5a       	subi	r30, 0xA7	; 167
    1802:	ff 4f       	sbci	r31, 0xFF	; 255
    1804:	80 81       	ld	r24, Z
    1806:	91 81       	ldd	r25, Z+1	; 0x01
    1808:	8d 93       	st	X+, r24
    180a:	9c 93       	st	X, r25
    180c:	fe 01       	movw	r30, r28
    180e:	eb 5a       	subi	r30, 0xAB	; 171
    1810:	ff 4f       	sbci	r31, 0xFF	; 255
    1812:	80 81       	ld	r24, Z
    1814:	91 81       	ldd	r25, Z+1	; 0x01
    1816:	01 97       	sbiw	r24, 0x01	; 1
    1818:	f1 f7       	brne	.-4      	; 0x1816 <main+0x9b4>
    181a:	fe 01       	movw	r30, r28
    181c:	eb 5a       	subi	r30, 0xAB	; 171
    181e:	ff 4f       	sbci	r31, 0xFF	; 255
    1820:	91 83       	std	Z+1, r25	; 0x01
    1822:	80 83       	st	Z, r24
		_delay_ms(2);

		toggle_mode();
    1824:	0e 94 5e 06 	call	0xcbc	; 0xcbc <toggle_mode>
		if(running_flag == 0) {  // Ensure stopwatch is paused before increment or decrement
    1828:	80 91 68 00 	lds	r24, 0x0068
    182c:	88 23       	and	r24, r24
    182e:	09 f0       	breq	.+2      	; 0x1832 <main+0x9d0>
    1830:	61 cb       	rjmp	.-2366   	; 0xef4 <main+0x92>

			/******* Hours Decrement *******/
			if((!(PINB & (1 << PB0))) && (hour_dec_flag == 0)) {
    1832:	e6 e3       	ldi	r30, 0x36	; 54
    1834:	f0 e0       	ldi	r31, 0x00	; 0
    1836:	80 81       	ld	r24, Z
    1838:	88 2f       	mov	r24, r24
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	81 70       	andi	r24, 0x01	; 1
    183e:	90 70       	andi	r25, 0x00	; 0
    1840:	00 97       	sbiw	r24, 0x00	; 0
    1842:	09 f0       	breq	.+2      	; 0x1846 <main+0x9e4>
    1844:	e3 c0       	rjmp	.+454    	; 0x1a0c <main+0xbaa>
    1846:	80 91 6b 00 	lds	r24, 0x006B
    184a:	88 23       	and	r24, r24
    184c:	09 f0       	breq	.+2      	; 0x1850 <main+0x9ee>
    184e:	de c0       	rjmp	.+444    	; 0x1a0c <main+0xbaa>
    1850:	fe 01       	movw	r30, r28
    1852:	ef 5a       	subi	r30, 0xAF	; 175
    1854:	ff 4f       	sbci	r31, 0xFF	; 255
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	a8 e4       	ldi	r26, 0x48	; 72
    185c:	b2 e4       	ldi	r27, 0x42	; 66
    185e:	80 83       	st	Z, r24
    1860:	91 83       	std	Z+1, r25	; 0x01
    1862:	a2 83       	std	Z+2, r26	; 0x02
    1864:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1866:	8e 01       	movw	r16, r28
    1868:	03 5b       	subi	r16, 0xB3	; 179
    186a:	1f 4f       	sbci	r17, 0xFF	; 255
    186c:	fe 01       	movw	r30, r28
    186e:	ef 5a       	subi	r30, 0xAF	; 175
    1870:	ff 4f       	sbci	r31, 0xFF	; 255
    1872:	60 81       	ld	r22, Z
    1874:	71 81       	ldd	r23, Z+1	; 0x01
    1876:	82 81       	ldd	r24, Z+2	; 0x02
    1878:	93 81       	ldd	r25, Z+3	; 0x03
    187a:	20 e0       	ldi	r18, 0x00	; 0
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	4a e7       	ldi	r20, 0x7A	; 122
    1880:	55 e4       	ldi	r21, 0x45	; 69
    1882:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	f8 01       	movw	r30, r16
    188c:	80 83       	st	Z, r24
    188e:	91 83       	std	Z+1, r25	; 0x01
    1890:	a2 83       	std	Z+2, r26	; 0x02
    1892:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1894:	fe 01       	movw	r30, r28
    1896:	e3 5b       	subi	r30, 0xB3	; 179
    1898:	ff 4f       	sbci	r31, 0xFF	; 255
    189a:	60 81       	ld	r22, Z
    189c:	71 81       	ldd	r23, Z+1	; 0x01
    189e:	82 81       	ldd	r24, Z+2	; 0x02
    18a0:	93 81       	ldd	r25, Z+3	; 0x03
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	40 e8       	ldi	r20, 0x80	; 128
    18a8:	5f e3       	ldi	r21, 0x3F	; 63
    18aa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    18ae:	88 23       	and	r24, r24
    18b0:	44 f4       	brge	.+16     	; 0x18c2 <main+0xa60>
		__ticks = 1;
    18b2:	fe 01       	movw	r30, r28
    18b4:	e5 5b       	subi	r30, 0xB5	; 181
    18b6:	ff 4f       	sbci	r31, 0xFF	; 255
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	91 83       	std	Z+1, r25	; 0x01
    18be:	80 83       	st	Z, r24
    18c0:	64 c0       	rjmp	.+200    	; 0x198a <main+0xb28>
	else if (__tmp > 65535)
    18c2:	fe 01       	movw	r30, r28
    18c4:	e3 5b       	subi	r30, 0xB3	; 179
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	60 81       	ld	r22, Z
    18ca:	71 81       	ldd	r23, Z+1	; 0x01
    18cc:	82 81       	ldd	r24, Z+2	; 0x02
    18ce:	93 81       	ldd	r25, Z+3	; 0x03
    18d0:	20 e0       	ldi	r18, 0x00	; 0
    18d2:	3f ef       	ldi	r19, 0xFF	; 255
    18d4:	4f e7       	ldi	r20, 0x7F	; 127
    18d6:	57 e4       	ldi	r21, 0x47	; 71
    18d8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    18dc:	18 16       	cp	r1, r24
    18de:	0c f0       	brlt	.+2      	; 0x18e2 <main+0xa80>
    18e0:	43 c0       	rjmp	.+134    	; 0x1968 <main+0xb06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18e2:	fe 01       	movw	r30, r28
    18e4:	ef 5a       	subi	r30, 0xAF	; 175
    18e6:	ff 4f       	sbci	r31, 0xFF	; 255
    18e8:	60 81       	ld	r22, Z
    18ea:	71 81       	ldd	r23, Z+1	; 0x01
    18ec:	82 81       	ldd	r24, Z+2	; 0x02
    18ee:	93 81       	ldd	r25, Z+3	; 0x03
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	40 e2       	ldi	r20, 0x20	; 32
    18f6:	51 e4       	ldi	r21, 0x41	; 65
    18f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18fc:	dc 01       	movw	r26, r24
    18fe:	cb 01       	movw	r24, r22
    1900:	8e 01       	movw	r16, r28
    1902:	05 5b       	subi	r16, 0xB5	; 181
    1904:	1f 4f       	sbci	r17, 0xFF	; 255
    1906:	bc 01       	movw	r22, r24
    1908:	cd 01       	movw	r24, r26
    190a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    190e:	dc 01       	movw	r26, r24
    1910:	cb 01       	movw	r24, r22
    1912:	f8 01       	movw	r30, r16
    1914:	91 83       	std	Z+1, r25	; 0x01
    1916:	80 83       	st	Z, r24
    1918:	1f c0       	rjmp	.+62     	; 0x1958 <main+0xaf6>
    191a:	fe 01       	movw	r30, r28
    191c:	e7 5b       	subi	r30, 0xB7	; 183
    191e:	ff 4f       	sbci	r31, 0xFF	; 255
    1920:	80 e9       	ldi	r24, 0x90	; 144
    1922:	91 e0       	ldi	r25, 0x01	; 1
    1924:	91 83       	std	Z+1, r25	; 0x01
    1926:	80 83       	st	Z, r24
    1928:	fe 01       	movw	r30, r28
    192a:	e7 5b       	subi	r30, 0xB7	; 183
    192c:	ff 4f       	sbci	r31, 0xFF	; 255
    192e:	80 81       	ld	r24, Z
    1930:	91 81       	ldd	r25, Z+1	; 0x01
    1932:	01 97       	sbiw	r24, 0x01	; 1
    1934:	f1 f7       	brne	.-4      	; 0x1932 <main+0xad0>
    1936:	fe 01       	movw	r30, r28
    1938:	e7 5b       	subi	r30, 0xB7	; 183
    193a:	ff 4f       	sbci	r31, 0xFF	; 255
    193c:	91 83       	std	Z+1, r25	; 0x01
    193e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1940:	de 01       	movw	r26, r28
    1942:	a5 5b       	subi	r26, 0xB5	; 181
    1944:	bf 4f       	sbci	r27, 0xFF	; 255
    1946:	fe 01       	movw	r30, r28
    1948:	e5 5b       	subi	r30, 0xB5	; 181
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	80 81       	ld	r24, Z
    194e:	91 81       	ldd	r25, Z+1	; 0x01
    1950:	01 97       	sbiw	r24, 0x01	; 1
    1952:	11 96       	adiw	r26, 0x01	; 1
    1954:	9c 93       	st	X, r25
    1956:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1958:	fe 01       	movw	r30, r28
    195a:	e5 5b       	subi	r30, 0xB5	; 181
    195c:	ff 4f       	sbci	r31, 0xFF	; 255
    195e:	80 81       	ld	r24, Z
    1960:	91 81       	ldd	r25, Z+1	; 0x01
    1962:	00 97       	sbiw	r24, 0x00	; 0
    1964:	d1 f6       	brne	.-76     	; 0x191a <main+0xab8>
    1966:	28 c0       	rjmp	.+80     	; 0x19b8 <main+0xb56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1968:	8e 01       	movw	r16, r28
    196a:	05 5b       	subi	r16, 0xB5	; 181
    196c:	1f 4f       	sbci	r17, 0xFF	; 255
    196e:	fe 01       	movw	r30, r28
    1970:	e3 5b       	subi	r30, 0xB3	; 179
    1972:	ff 4f       	sbci	r31, 0xFF	; 255
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	82 81       	ldd	r24, Z+2	; 0x02
    197a:	93 81       	ldd	r25, Z+3	; 0x03
    197c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1980:	dc 01       	movw	r26, r24
    1982:	cb 01       	movw	r24, r22
    1984:	f8 01       	movw	r30, r16
    1986:	91 83       	std	Z+1, r25	; 0x01
    1988:	80 83       	st	Z, r24
    198a:	de 01       	movw	r26, r28
    198c:	a9 5b       	subi	r26, 0xB9	; 185
    198e:	bf 4f       	sbci	r27, 0xFF	; 255
    1990:	fe 01       	movw	r30, r28
    1992:	e5 5b       	subi	r30, 0xB5	; 181
    1994:	ff 4f       	sbci	r31, 0xFF	; 255
    1996:	80 81       	ld	r24, Z
    1998:	91 81       	ldd	r25, Z+1	; 0x01
    199a:	11 96       	adiw	r26, 0x01	; 1
    199c:	9c 93       	st	X, r25
    199e:	8e 93       	st	-X, r24
    19a0:	fe 01       	movw	r30, r28
    19a2:	e9 5b       	subi	r30, 0xB9	; 185
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	80 81       	ld	r24, Z
    19a8:	91 81       	ldd	r25, Z+1	; 0x01
    19aa:	01 97       	sbiw	r24, 0x01	; 1
    19ac:	f1 f7       	brne	.-4      	; 0x19aa <main+0xb48>
    19ae:	fe 01       	movw	r30, r28
    19b0:	e9 5b       	subi	r30, 0xB9	; 185
    19b2:	ff 4f       	sbci	r31, 0xFF	; 255
    19b4:	91 83       	std	Z+1, r25	; 0x01
    19b6:	80 83       	st	Z, r24
				_delay_ms(50);
				if(!(PINB & (1 << PB0))) {  // Ensure button is still pressed
    19b8:	e6 e3       	ldi	r30, 0x36	; 54
    19ba:	f0 e0       	ldi	r31, 0x00	; 0
    19bc:	80 81       	ld	r24, Z
    19be:	88 2f       	mov	r24, r24
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	81 70       	andi	r24, 0x01	; 1
    19c4:	90 70       	andi	r25, 0x00	; 0
    19c6:	00 97       	sbiw	r24, 0x00	; 0
    19c8:	09 f5       	brne	.+66     	; 0x1a0c <main+0xbaa>
					hour_dec_flag = 1;
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	80 93 6b 00 	sts	0x006B, r24
					if(!(hours_units == 0 && hours_tens == 0)) {
    19d0:	80 91 75 00 	lds	r24, 0x0075
    19d4:	88 23       	and	r24, r24
    19d6:	21 f4       	brne	.+8      	; 0x19e0 <main+0xb7e>
    19d8:	80 91 76 00 	lds	r24, 0x0076
    19dc:	88 23       	and	r24, r24
    19de:	b1 f0       	breq	.+44     	; 0x1a0c <main+0xbaa>
						if(hours_units == 0 && hours_tens != 0) {
    19e0:	80 91 75 00 	lds	r24, 0x0075
    19e4:	88 23       	and	r24, r24
    19e6:	69 f4       	brne	.+26     	; 0x1a02 <main+0xba0>
    19e8:	80 91 76 00 	lds	r24, 0x0076
    19ec:	88 23       	and	r24, r24
    19ee:	49 f0       	breq	.+18     	; 0x1a02 <main+0xba0>
							hours_units = 9;
    19f0:	89 e0       	ldi	r24, 0x09	; 9
    19f2:	80 93 75 00 	sts	0x0075, r24
							hours_tens--;
    19f6:	80 91 76 00 	lds	r24, 0x0076
    19fa:	81 50       	subi	r24, 0x01	; 1
    19fc:	80 93 76 00 	sts	0x0076, r24
    1a00:	05 c0       	rjmp	.+10     	; 0x1a0c <main+0xbaa>
						} else {
							hours_units--;
    1a02:	80 91 75 00 	lds	r24, 0x0075
    1a06:	81 50       	subi	r24, 0x01	; 1
    1a08:	80 93 75 00 	sts	0x0075, r24
						}
					}
				}
			}
			if((PINB & (1 << PB0))) {  // Reset flag when button is released
    1a0c:	e6 e3       	ldi	r30, 0x36	; 54
    1a0e:	f0 e0       	ldi	r31, 0x00	; 0
    1a10:	80 81       	ld	r24, Z
    1a12:	88 2f       	mov	r24, r24
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	81 70       	andi	r24, 0x01	; 1
    1a18:	90 70       	andi	r25, 0x00	; 0
    1a1a:	88 23       	and	r24, r24
    1a1c:	11 f0       	breq	.+4      	; 0x1a22 <main+0xbc0>
				hour_dec_flag = 0;
    1a1e:	10 92 6b 00 	sts	0x006B, r1
			}

			/****** Hours Increment ******/
			if((!(PINB & (1 << PB1))) && (hour_inc_flag == 0)) {
    1a22:	e6 e3       	ldi	r30, 0x36	; 54
    1a24:	f0 e0       	ldi	r31, 0x00	; 0
    1a26:	80 81       	ld	r24, Z
    1a28:	88 2f       	mov	r24, r24
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	82 70       	andi	r24, 0x02	; 2
    1a2e:	90 70       	andi	r25, 0x00	; 0
    1a30:	00 97       	sbiw	r24, 0x00	; 0
    1a32:	09 f0       	breq	.+2      	; 0x1a36 <main+0xbd4>
    1a34:	ae c0       	rjmp	.+348    	; 0x1b92 <main+0xd30>
    1a36:	80 91 6a 00 	lds	r24, 0x006A
    1a3a:	88 23       	and	r24, r24
    1a3c:	09 f0       	breq	.+2      	; 0x1a40 <main+0xbde>
    1a3e:	a9 c0       	rjmp	.+338    	; 0x1b92 <main+0xd30>
    1a40:	fe 01       	movw	r30, r28
    1a42:	ed 5b       	subi	r30, 0xBD	; 189
    1a44:	ff 4f       	sbci	r31, 0xFF	; 255
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	a8 e4       	ldi	r26, 0x48	; 72
    1a4c:	b2 e4       	ldi	r27, 0x42	; 66
    1a4e:	80 83       	st	Z, r24
    1a50:	91 83       	std	Z+1, r25	; 0x01
    1a52:	a2 83       	std	Z+2, r26	; 0x02
    1a54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a56:	8e 01       	movw	r16, r28
    1a58:	01 5c       	subi	r16, 0xC1	; 193
    1a5a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	ed 5b       	subi	r30, 0xBD	; 189
    1a60:	ff 4f       	sbci	r31, 0xFF	; 255
    1a62:	60 81       	ld	r22, Z
    1a64:	71 81       	ldd	r23, Z+1	; 0x01
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	4a e7       	ldi	r20, 0x7A	; 122
    1a70:	55 e4       	ldi	r21, 0x45	; 69
    1a72:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	f8 01       	movw	r30, r16
    1a7c:	80 83       	st	Z, r24
    1a7e:	91 83       	std	Z+1, r25	; 0x01
    1a80:	a2 83       	std	Z+2, r26	; 0x02
    1a82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a84:	fe 01       	movw	r30, r28
    1a86:	ff 96       	adiw	r30, 0x3f	; 63
    1a88:	60 81       	ld	r22, Z
    1a8a:	71 81       	ldd	r23, Z+1	; 0x01
    1a8c:	82 81       	ldd	r24, Z+2	; 0x02
    1a8e:	93 81       	ldd	r25, Z+3	; 0x03
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e8       	ldi	r20, 0x80	; 128
    1a96:	5f e3       	ldi	r21, 0x3F	; 63
    1a98:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a9c:	88 23       	and	r24, r24
    1a9e:	2c f4       	brge	.+10     	; 0x1aaa <main+0xc48>
		__ticks = 1;
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	9e af       	std	Y+62, r25	; 0x3e
    1aa6:	8d af       	std	Y+61, r24	; 0x3d
    1aa8:	46 c0       	rjmp	.+140    	; 0x1b36 <main+0xcd4>
	else if (__tmp > 65535)
    1aaa:	fe 01       	movw	r30, r28
    1aac:	ff 96       	adiw	r30, 0x3f	; 63
    1aae:	60 81       	ld	r22, Z
    1ab0:	71 81       	ldd	r23, Z+1	; 0x01
    1ab2:	82 81       	ldd	r24, Z+2	; 0x02
    1ab4:	93 81       	ldd	r25, Z+3	; 0x03
    1ab6:	20 e0       	ldi	r18, 0x00	; 0
    1ab8:	3f ef       	ldi	r19, 0xFF	; 255
    1aba:	4f e7       	ldi	r20, 0x7F	; 127
    1abc:	57 e4       	ldi	r21, 0x47	; 71
    1abe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ac2:	18 16       	cp	r1, r24
    1ac4:	64 f5       	brge	.+88     	; 0x1b1e <main+0xcbc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	ed 5b       	subi	r30, 0xBD	; 189
    1aca:	ff 4f       	sbci	r31, 0xFF	; 255
    1acc:	60 81       	ld	r22, Z
    1ace:	71 81       	ldd	r23, Z+1	; 0x01
    1ad0:	82 81       	ldd	r24, Z+2	; 0x02
    1ad2:	93 81       	ldd	r25, Z+3	; 0x03
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	30 e0       	ldi	r19, 0x00	; 0
    1ad8:	40 e2       	ldi	r20, 0x20	; 32
    1ada:	51 e4       	ldi	r21, 0x41	; 65
    1adc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ae0:	dc 01       	movw	r26, r24
    1ae2:	cb 01       	movw	r24, r22
    1ae4:	bc 01       	movw	r22, r24
    1ae6:	cd 01       	movw	r24, r26
    1ae8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aec:	dc 01       	movw	r26, r24
    1aee:	cb 01       	movw	r24, r22
    1af0:	9e af       	std	Y+62, r25	; 0x3e
    1af2:	8d af       	std	Y+61, r24	; 0x3d
    1af4:	0f c0       	rjmp	.+30     	; 0x1b14 <main+0xcb2>
    1af6:	80 e9       	ldi	r24, 0x90	; 144
    1af8:	91 e0       	ldi	r25, 0x01	; 1
    1afa:	9c af       	std	Y+60, r25	; 0x3c
    1afc:	8b af       	std	Y+59, r24	; 0x3b
    1afe:	8b ad       	ldd	r24, Y+59	; 0x3b
    1b00:	9c ad       	ldd	r25, Y+60	; 0x3c
    1b02:	01 97       	sbiw	r24, 0x01	; 1
    1b04:	f1 f7       	brne	.-4      	; 0x1b02 <main+0xca0>
    1b06:	9c af       	std	Y+60, r25	; 0x3c
    1b08:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b0a:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b0c:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b0e:	01 97       	sbiw	r24, 0x01	; 1
    1b10:	9e af       	std	Y+62, r25	; 0x3e
    1b12:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b14:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b16:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b18:	00 97       	sbiw	r24, 0x00	; 0
    1b1a:	69 f7       	brne	.-38     	; 0x1af6 <main+0xc94>
    1b1c:	16 c0       	rjmp	.+44     	; 0x1b4a <main+0xce8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b1e:	fe 01       	movw	r30, r28
    1b20:	ff 96       	adiw	r30, 0x3f	; 63
    1b22:	60 81       	ld	r22, Z
    1b24:	71 81       	ldd	r23, Z+1	; 0x01
    1b26:	82 81       	ldd	r24, Z+2	; 0x02
    1b28:	93 81       	ldd	r25, Z+3	; 0x03
    1b2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	9e af       	std	Y+62, r25	; 0x3e
    1b34:	8d af       	std	Y+61, r24	; 0x3d
    1b36:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b38:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b3a:	9a af       	std	Y+58, r25	; 0x3a
    1b3c:	89 af       	std	Y+57, r24	; 0x39
    1b3e:	89 ad       	ldd	r24, Y+57	; 0x39
    1b40:	9a ad       	ldd	r25, Y+58	; 0x3a
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <main+0xce0>
    1b46:	9a af       	std	Y+58, r25	; 0x3a
    1b48:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(50);
				if(!(PINB & (1 << PB1))) {  // Ensure button is still pressed
    1b4a:	e6 e3       	ldi	r30, 0x36	; 54
    1b4c:	f0 e0       	ldi	r31, 0x00	; 0
    1b4e:	80 81       	ld	r24, Z
    1b50:	88 2f       	mov	r24, r24
    1b52:	90 e0       	ldi	r25, 0x00	; 0
    1b54:	82 70       	andi	r24, 0x02	; 2
    1b56:	90 70       	andi	r25, 0x00	; 0
    1b58:	00 97       	sbiw	r24, 0x00	; 0
    1b5a:	d9 f4       	brne	.+54     	; 0x1b92 <main+0xd30>
					hour_inc_flag = 1;
    1b5c:	81 e0       	ldi	r24, 0x01	; 1
    1b5e:	80 93 6a 00 	sts	0x006A, r24
					if(!(hours_units == 9 && hours_tens == 9)) {
    1b62:	80 91 75 00 	lds	r24, 0x0075
    1b66:	89 30       	cpi	r24, 0x09	; 9
    1b68:	21 f4       	brne	.+8      	; 0x1b72 <main+0xd10>
    1b6a:	80 91 76 00 	lds	r24, 0x0076
    1b6e:	89 30       	cpi	r24, 0x09	; 9
    1b70:	81 f0       	breq	.+32     	; 0x1b92 <main+0xd30>
						hours_units++;
    1b72:	80 91 75 00 	lds	r24, 0x0075
    1b76:	8f 5f       	subi	r24, 0xFF	; 255
    1b78:	80 93 75 00 	sts	0x0075, r24
						if(hours_units == 10) {
    1b7c:	80 91 75 00 	lds	r24, 0x0075
    1b80:	8a 30       	cpi	r24, 0x0A	; 10
    1b82:	39 f4       	brne	.+14     	; 0x1b92 <main+0xd30>
							hours_units = 0;
    1b84:	10 92 75 00 	sts	0x0075, r1
							hours_tens++;
    1b88:	80 91 76 00 	lds	r24, 0x0076
    1b8c:	8f 5f       	subi	r24, 0xFF	; 255
    1b8e:	80 93 76 00 	sts	0x0076, r24
						}
					}
				}
			}
			if((PINB & (1 << PB1))) {  // Reset flag when button is released
    1b92:	e6 e3       	ldi	r30, 0x36	; 54
    1b94:	f0 e0       	ldi	r31, 0x00	; 0
    1b96:	80 81       	ld	r24, Z
    1b98:	88 2f       	mov	r24, r24
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	82 70       	andi	r24, 0x02	; 2
    1b9e:	90 70       	andi	r25, 0x00	; 0
    1ba0:	00 97       	sbiw	r24, 0x00	; 0
    1ba2:	11 f0       	breq	.+4      	; 0x1ba8 <main+0xd46>
				hour_inc_flag = 0;
    1ba4:	10 92 6a 00 	sts	0x006A, r1
			}

			/******* Minutes Decrement *******/
			if((!(PINB & (1 << PB3))) && (min_dec_flag == 0)) {
    1ba8:	e6 e3       	ldi	r30, 0x36	; 54
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	80 81       	ld	r24, Z
    1bae:	88 2f       	mov	r24, r24
    1bb0:	90 e0       	ldi	r25, 0x00	; 0
    1bb2:	88 70       	andi	r24, 0x08	; 8
    1bb4:	90 70       	andi	r25, 0x00	; 0
    1bb6:	00 97       	sbiw	r24, 0x00	; 0
    1bb8:	09 f0       	breq	.+2      	; 0x1bbc <main+0xd5a>
    1bba:	c7 c0       	rjmp	.+398    	; 0x1d4a <main+0xee8>
    1bbc:	80 91 6d 00 	lds	r24, 0x006D
    1bc0:	88 23       	and	r24, r24
    1bc2:	09 f0       	breq	.+2      	; 0x1bc6 <main+0xd64>
    1bc4:	c2 c0       	rjmp	.+388    	; 0x1d4a <main+0xee8>
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	a8 e4       	ldi	r26, 0x48	; 72
    1bcc:	b2 e4       	ldi	r27, 0x42	; 66
    1bce:	8d ab       	std	Y+53, r24	; 0x35
    1bd0:	9e ab       	std	Y+54, r25	; 0x36
    1bd2:	af ab       	std	Y+55, r26	; 0x37
    1bd4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bd6:	6d a9       	ldd	r22, Y+53	; 0x35
    1bd8:	7e a9       	ldd	r23, Y+54	; 0x36
    1bda:	8f a9       	ldd	r24, Y+55	; 0x37
    1bdc:	98 ad       	ldd	r25, Y+56	; 0x38
    1bde:	20 e0       	ldi	r18, 0x00	; 0
    1be0:	30 e0       	ldi	r19, 0x00	; 0
    1be2:	4a e7       	ldi	r20, 0x7A	; 122
    1be4:	55 e4       	ldi	r21, 0x45	; 69
    1be6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bea:	dc 01       	movw	r26, r24
    1bec:	cb 01       	movw	r24, r22
    1bee:	89 ab       	std	Y+49, r24	; 0x31
    1bf0:	9a ab       	std	Y+50, r25	; 0x32
    1bf2:	ab ab       	std	Y+51, r26	; 0x33
    1bf4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1bf6:	69 a9       	ldd	r22, Y+49	; 0x31
    1bf8:	7a a9       	ldd	r23, Y+50	; 0x32
    1bfa:	8b a9       	ldd	r24, Y+51	; 0x33
    1bfc:	9c a9       	ldd	r25, Y+52	; 0x34
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
    1c00:	30 e0       	ldi	r19, 0x00	; 0
    1c02:	40 e8       	ldi	r20, 0x80	; 128
    1c04:	5f e3       	ldi	r21, 0x3F	; 63
    1c06:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c0a:	88 23       	and	r24, r24
    1c0c:	2c f4       	brge	.+10     	; 0x1c18 <main+0xdb6>
		__ticks = 1;
    1c0e:	81 e0       	ldi	r24, 0x01	; 1
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	98 ab       	std	Y+48, r25	; 0x30
    1c14:	8f a7       	std	Y+47, r24	; 0x2f
    1c16:	3f c0       	rjmp	.+126    	; 0x1c96 <main+0xe34>
	else if (__tmp > 65535)
    1c18:	69 a9       	ldd	r22, Y+49	; 0x31
    1c1a:	7a a9       	ldd	r23, Y+50	; 0x32
    1c1c:	8b a9       	ldd	r24, Y+51	; 0x33
    1c1e:	9c a9       	ldd	r25, Y+52	; 0x34
    1c20:	20 e0       	ldi	r18, 0x00	; 0
    1c22:	3f ef       	ldi	r19, 0xFF	; 255
    1c24:	4f e7       	ldi	r20, 0x7F	; 127
    1c26:	57 e4       	ldi	r21, 0x47	; 71
    1c28:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c2c:	18 16       	cp	r1, r24
    1c2e:	4c f5       	brge	.+82     	; 0x1c82 <main+0xe20>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c30:	6d a9       	ldd	r22, Y+53	; 0x35
    1c32:	7e a9       	ldd	r23, Y+54	; 0x36
    1c34:	8f a9       	ldd	r24, Y+55	; 0x37
    1c36:	98 ad       	ldd	r25, Y+56	; 0x38
    1c38:	20 e0       	ldi	r18, 0x00	; 0
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	40 e2       	ldi	r20, 0x20	; 32
    1c3e:	51 e4       	ldi	r21, 0x41	; 65
    1c40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	bc 01       	movw	r22, r24
    1c4a:	cd 01       	movw	r24, r26
    1c4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c50:	dc 01       	movw	r26, r24
    1c52:	cb 01       	movw	r24, r22
    1c54:	98 ab       	std	Y+48, r25	; 0x30
    1c56:	8f a7       	std	Y+47, r24	; 0x2f
    1c58:	0f c0       	rjmp	.+30     	; 0x1c78 <main+0xe16>
    1c5a:	80 e9       	ldi	r24, 0x90	; 144
    1c5c:	91 e0       	ldi	r25, 0x01	; 1
    1c5e:	9e a7       	std	Y+46, r25	; 0x2e
    1c60:	8d a7       	std	Y+45, r24	; 0x2d
    1c62:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c64:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c66:	01 97       	sbiw	r24, 0x01	; 1
    1c68:	f1 f7       	brne	.-4      	; 0x1c66 <main+0xe04>
    1c6a:	9e a7       	std	Y+46, r25	; 0x2e
    1c6c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c70:	98 a9       	ldd	r25, Y+48	; 0x30
    1c72:	01 97       	sbiw	r24, 0x01	; 1
    1c74:	98 ab       	std	Y+48, r25	; 0x30
    1c76:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c78:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c7a:	98 a9       	ldd	r25, Y+48	; 0x30
    1c7c:	00 97       	sbiw	r24, 0x00	; 0
    1c7e:	69 f7       	brne	.-38     	; 0x1c5a <main+0xdf8>
    1c80:	14 c0       	rjmp	.+40     	; 0x1caa <main+0xe48>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c82:	69 a9       	ldd	r22, Y+49	; 0x31
    1c84:	7a a9       	ldd	r23, Y+50	; 0x32
    1c86:	8b a9       	ldd	r24, Y+51	; 0x33
    1c88:	9c a9       	ldd	r25, Y+52	; 0x34
    1c8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c8e:	dc 01       	movw	r26, r24
    1c90:	cb 01       	movw	r24, r22
    1c92:	98 ab       	std	Y+48, r25	; 0x30
    1c94:	8f a7       	std	Y+47, r24	; 0x2f
    1c96:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c98:	98 a9       	ldd	r25, Y+48	; 0x30
    1c9a:	9c a7       	std	Y+44, r25	; 0x2c
    1c9c:	8b a7       	std	Y+43, r24	; 0x2b
    1c9e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ca0:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ca2:	01 97       	sbiw	r24, 0x01	; 1
    1ca4:	f1 f7       	brne	.-4      	; 0x1ca2 <main+0xe40>
    1ca6:	9c a7       	std	Y+44, r25	; 0x2c
    1ca8:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(50);
				if(!(PINB & (1 << PB3))) {  // Ensure button is still pressed
    1caa:	e6 e3       	ldi	r30, 0x36	; 54
    1cac:	f0 e0       	ldi	r31, 0x00	; 0
    1cae:	80 81       	ld	r24, Z
    1cb0:	88 2f       	mov	r24, r24
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	88 70       	andi	r24, 0x08	; 8
    1cb6:	90 70       	andi	r25, 0x00	; 0
    1cb8:	00 97       	sbiw	r24, 0x00	; 0
    1cba:	09 f0       	breq	.+2      	; 0x1cbe <main+0xe5c>
    1cbc:	46 c0       	rjmp	.+140    	; 0x1d4a <main+0xee8>
					min_dec_flag = 1;
    1cbe:	81 e0       	ldi	r24, 0x01	; 1
    1cc0:	80 93 6d 00 	sts	0x006D, r24
					if(!(minutes_units == 0 && minutes_tens == 0)) {
    1cc4:	80 91 73 00 	lds	r24, 0x0073
    1cc8:	88 23       	and	r24, r24
    1cca:	21 f4       	brne	.+8      	; 0x1cd4 <main+0xe72>
    1ccc:	80 91 74 00 	lds	r24, 0x0074
    1cd0:	88 23       	and	r24, r24
    1cd2:	b9 f0       	breq	.+46     	; 0x1d02 <main+0xea0>
						if(minutes_units == 0 && minutes_tens != 0) {
    1cd4:	80 91 73 00 	lds	r24, 0x0073
    1cd8:	88 23       	and	r24, r24
    1cda:	69 f4       	brne	.+26     	; 0x1cf6 <main+0xe94>
    1cdc:	80 91 74 00 	lds	r24, 0x0074
    1ce0:	88 23       	and	r24, r24
    1ce2:	49 f0       	breq	.+18     	; 0x1cf6 <main+0xe94>
							minutes_units = 9;
    1ce4:	89 e0       	ldi	r24, 0x09	; 9
    1ce6:	80 93 73 00 	sts	0x0073, r24
							minutes_tens--;
    1cea:	80 91 74 00 	lds	r24, 0x0074
    1cee:	81 50       	subi	r24, 0x01	; 1
    1cf0:	80 93 74 00 	sts	0x0074, r24
    1cf4:	2a c0       	rjmp	.+84     	; 0x1d4a <main+0xee8>
						} else {
							minutes_units--;
    1cf6:	80 91 73 00 	lds	r24, 0x0073
    1cfa:	81 50       	subi	r24, 0x01	; 1
    1cfc:	80 93 73 00 	sts	0x0073, r24
    1d00:	24 c0       	rjmp	.+72     	; 0x1d4a <main+0xee8>
						}
					}
					else {
						if((hours_units != 0) || (hours_tens != 0)) {
    1d02:	80 91 75 00 	lds	r24, 0x0075
    1d06:	88 23       	and	r24, r24
    1d08:	21 f4       	brne	.+8      	; 0x1d12 <main+0xeb0>
    1d0a:	80 91 76 00 	lds	r24, 0x0076
    1d0e:	88 23       	and	r24, r24
    1d10:	e1 f0       	breq	.+56     	; 0x1d4a <main+0xee8>
							if(hours_units == 0 && hours_tens != 0) {
    1d12:	80 91 75 00 	lds	r24, 0x0075
    1d16:	88 23       	and	r24, r24
    1d18:	69 f4       	brne	.+26     	; 0x1d34 <main+0xed2>
    1d1a:	80 91 76 00 	lds	r24, 0x0076
    1d1e:	88 23       	and	r24, r24
    1d20:	49 f0       	breq	.+18     	; 0x1d34 <main+0xed2>
								hours_units = 9;
    1d22:	89 e0       	ldi	r24, 0x09	; 9
    1d24:	80 93 75 00 	sts	0x0075, r24
								hours_tens--;
    1d28:	80 91 76 00 	lds	r24, 0x0076
    1d2c:	81 50       	subi	r24, 0x01	; 1
    1d2e:	80 93 76 00 	sts	0x0076, r24
    1d32:	05 c0       	rjmp	.+10     	; 0x1d3e <main+0xedc>
							} else {
								hours_units--;
    1d34:	80 91 75 00 	lds	r24, 0x0075
    1d38:	81 50       	subi	r24, 0x01	; 1
    1d3a:	80 93 75 00 	sts	0x0075, r24
							}
							minutes_units = 9;
    1d3e:	89 e0       	ldi	r24, 0x09	; 9
    1d40:	80 93 73 00 	sts	0x0073, r24
							minutes_tens = 5;
    1d44:	85 e0       	ldi	r24, 0x05	; 5
    1d46:	80 93 74 00 	sts	0x0074, r24
						}
					}
				}
			}
			if((PINB & (1 << PB3))) {  // Reset flag when button is released
    1d4a:	e6 e3       	ldi	r30, 0x36	; 54
    1d4c:	f0 e0       	ldi	r31, 0x00	; 0
    1d4e:	80 81       	ld	r24, Z
    1d50:	88 2f       	mov	r24, r24
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	88 70       	andi	r24, 0x08	; 8
    1d56:	90 70       	andi	r25, 0x00	; 0
    1d58:	00 97       	sbiw	r24, 0x00	; 0
    1d5a:	11 f0       	breq	.+4      	; 0x1d60 <main+0xefe>
				min_dec_flag = 0;
    1d5c:	10 92 6d 00 	sts	0x006D, r1
			}

			/****** Minutes Increment ******/
			if((!(PINB & (1 << PB4))) && (min_inc_flag == 0)) {
    1d60:	e6 e3       	ldi	r30, 0x36	; 54
    1d62:	f0 e0       	ldi	r31, 0x00	; 0
    1d64:	80 81       	ld	r24, Z
    1d66:	88 2f       	mov	r24, r24
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	80 71       	andi	r24, 0x10	; 16
    1d6c:	90 70       	andi	r25, 0x00	; 0
    1d6e:	00 97       	sbiw	r24, 0x00	; 0
    1d70:	09 f0       	breq	.+2      	; 0x1d74 <main+0xf12>
    1d72:	b0 c0       	rjmp	.+352    	; 0x1ed4 <main+0x1072>
    1d74:	80 91 6c 00 	lds	r24, 0x006C
    1d78:	88 23       	and	r24, r24
    1d7a:	09 f0       	breq	.+2      	; 0x1d7e <main+0xf1c>
    1d7c:	ab c0       	rjmp	.+342    	; 0x1ed4 <main+0x1072>
    1d7e:	80 e0       	ldi	r24, 0x00	; 0
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	a8 e4       	ldi	r26, 0x48	; 72
    1d84:	b2 e4       	ldi	r27, 0x42	; 66
    1d86:	8f a3       	std	Y+39, r24	; 0x27
    1d88:	98 a7       	std	Y+40, r25	; 0x28
    1d8a:	a9 a7       	std	Y+41, r26	; 0x29
    1d8c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d8e:	6f a1       	ldd	r22, Y+39	; 0x27
    1d90:	78 a5       	ldd	r23, Y+40	; 0x28
    1d92:	89 a5       	ldd	r24, Y+41	; 0x29
    1d94:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d96:	20 e0       	ldi	r18, 0x00	; 0
    1d98:	30 e0       	ldi	r19, 0x00	; 0
    1d9a:	4a e7       	ldi	r20, 0x7A	; 122
    1d9c:	55 e4       	ldi	r21, 0x45	; 69
    1d9e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1da2:	dc 01       	movw	r26, r24
    1da4:	cb 01       	movw	r24, r22
    1da6:	8b a3       	std	Y+35, r24	; 0x23
    1da8:	9c a3       	std	Y+36, r25	; 0x24
    1daa:	ad a3       	std	Y+37, r26	; 0x25
    1dac:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1dae:	6b a1       	ldd	r22, Y+35	; 0x23
    1db0:	7c a1       	ldd	r23, Y+36	; 0x24
    1db2:	8d a1       	ldd	r24, Y+37	; 0x25
    1db4:	9e a1       	ldd	r25, Y+38	; 0x26
    1db6:	20 e0       	ldi	r18, 0x00	; 0
    1db8:	30 e0       	ldi	r19, 0x00	; 0
    1dba:	40 e8       	ldi	r20, 0x80	; 128
    1dbc:	5f e3       	ldi	r21, 0x3F	; 63
    1dbe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dc2:	88 23       	and	r24, r24
    1dc4:	2c f4       	brge	.+10     	; 0x1dd0 <main+0xf6e>
		__ticks = 1;
    1dc6:	81 e0       	ldi	r24, 0x01	; 1
    1dc8:	90 e0       	ldi	r25, 0x00	; 0
    1dca:	9a a3       	std	Y+34, r25	; 0x22
    1dcc:	89 a3       	std	Y+33, r24	; 0x21
    1dce:	3f c0       	rjmp	.+126    	; 0x1e4e <main+0xfec>
	else if (__tmp > 65535)
    1dd0:	6b a1       	ldd	r22, Y+35	; 0x23
    1dd2:	7c a1       	ldd	r23, Y+36	; 0x24
    1dd4:	8d a1       	ldd	r24, Y+37	; 0x25
    1dd6:	9e a1       	ldd	r25, Y+38	; 0x26
    1dd8:	20 e0       	ldi	r18, 0x00	; 0
    1dda:	3f ef       	ldi	r19, 0xFF	; 255
    1ddc:	4f e7       	ldi	r20, 0x7F	; 127
    1dde:	57 e4       	ldi	r21, 0x47	; 71
    1de0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1de4:	18 16       	cp	r1, r24
    1de6:	4c f5       	brge	.+82     	; 0x1e3a <main+0xfd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1de8:	6f a1       	ldd	r22, Y+39	; 0x27
    1dea:	78 a5       	ldd	r23, Y+40	; 0x28
    1dec:	89 a5       	ldd	r24, Y+41	; 0x29
    1dee:	9a a5       	ldd	r25, Y+42	; 0x2a
    1df0:	20 e0       	ldi	r18, 0x00	; 0
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	40 e2       	ldi	r20, 0x20	; 32
    1df6:	51 e4       	ldi	r21, 0x41	; 65
    1df8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dfc:	dc 01       	movw	r26, r24
    1dfe:	cb 01       	movw	r24, r22
    1e00:	bc 01       	movw	r22, r24
    1e02:	cd 01       	movw	r24, r26
    1e04:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e08:	dc 01       	movw	r26, r24
    1e0a:	cb 01       	movw	r24, r22
    1e0c:	9a a3       	std	Y+34, r25	; 0x22
    1e0e:	89 a3       	std	Y+33, r24	; 0x21
    1e10:	0f c0       	rjmp	.+30     	; 0x1e30 <main+0xfce>
    1e12:	80 e9       	ldi	r24, 0x90	; 144
    1e14:	91 e0       	ldi	r25, 0x01	; 1
    1e16:	98 a3       	std	Y+32, r25	; 0x20
    1e18:	8f 8f       	std	Y+31, r24	; 0x1f
    1e1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e1c:	98 a1       	ldd	r25, Y+32	; 0x20
    1e1e:	01 97       	sbiw	r24, 0x01	; 1
    1e20:	f1 f7       	brne	.-4      	; 0x1e1e <main+0xfbc>
    1e22:	98 a3       	std	Y+32, r25	; 0x20
    1e24:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e26:	89 a1       	ldd	r24, Y+33	; 0x21
    1e28:	9a a1       	ldd	r25, Y+34	; 0x22
    1e2a:	01 97       	sbiw	r24, 0x01	; 1
    1e2c:	9a a3       	std	Y+34, r25	; 0x22
    1e2e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e30:	89 a1       	ldd	r24, Y+33	; 0x21
    1e32:	9a a1       	ldd	r25, Y+34	; 0x22
    1e34:	00 97       	sbiw	r24, 0x00	; 0
    1e36:	69 f7       	brne	.-38     	; 0x1e12 <main+0xfb0>
    1e38:	14 c0       	rjmp	.+40     	; 0x1e62 <main+0x1000>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e3a:	6b a1       	ldd	r22, Y+35	; 0x23
    1e3c:	7c a1       	ldd	r23, Y+36	; 0x24
    1e3e:	8d a1       	ldd	r24, Y+37	; 0x25
    1e40:	9e a1       	ldd	r25, Y+38	; 0x26
    1e42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e46:	dc 01       	movw	r26, r24
    1e48:	cb 01       	movw	r24, r22
    1e4a:	9a a3       	std	Y+34, r25	; 0x22
    1e4c:	89 a3       	std	Y+33, r24	; 0x21
    1e4e:	89 a1       	ldd	r24, Y+33	; 0x21
    1e50:	9a a1       	ldd	r25, Y+34	; 0x22
    1e52:	9e 8f       	std	Y+30, r25	; 0x1e
    1e54:	8d 8f       	std	Y+29, r24	; 0x1d
    1e56:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e58:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e5a:	01 97       	sbiw	r24, 0x01	; 1
    1e5c:	f1 f7       	brne	.-4      	; 0x1e5a <main+0xff8>
    1e5e:	9e 8f       	std	Y+30, r25	; 0x1e
    1e60:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(50);
				if(!(PINB & (1 << PB4))) {  // Ensure button is still pressed
    1e62:	e6 e3       	ldi	r30, 0x36	; 54
    1e64:	f0 e0       	ldi	r31, 0x00	; 0
    1e66:	80 81       	ld	r24, Z
    1e68:	88 2f       	mov	r24, r24
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	80 71       	andi	r24, 0x10	; 16
    1e6e:	90 70       	andi	r25, 0x00	; 0
    1e70:	00 97       	sbiw	r24, 0x00	; 0
    1e72:	81 f5       	brne	.+96     	; 0x1ed4 <main+0x1072>
					min_inc_flag = 1;
    1e74:	81 e0       	ldi	r24, 0x01	; 1
    1e76:	80 93 6c 00 	sts	0x006C, r24
					if(!(minutes_units == 9 && minutes_tens == 5)) {
    1e7a:	80 91 73 00 	lds	r24, 0x0073
    1e7e:	89 30       	cpi	r24, 0x09	; 9
    1e80:	21 f4       	brne	.+8      	; 0x1e8a <main+0x1028>
    1e82:	80 91 74 00 	lds	r24, 0x0074
    1e86:	85 30       	cpi	r24, 0x05	; 5
    1e88:	89 f0       	breq	.+34     	; 0x1eac <main+0x104a>
						minutes_units++;
    1e8a:	80 91 73 00 	lds	r24, 0x0073
    1e8e:	8f 5f       	subi	r24, 0xFF	; 255
    1e90:	80 93 73 00 	sts	0x0073, r24
						if(minutes_units == 10) {
    1e94:	80 91 73 00 	lds	r24, 0x0073
    1e98:	8a 30       	cpi	r24, 0x0A	; 10
    1e9a:	e1 f4       	brne	.+56     	; 0x1ed4 <main+0x1072>
							minutes_units = 0;
    1e9c:	10 92 73 00 	sts	0x0073, r1
							minutes_tens++;
    1ea0:	80 91 74 00 	lds	r24, 0x0074
    1ea4:	8f 5f       	subi	r24, 0xFF	; 255
    1ea6:	80 93 74 00 	sts	0x0074, r24
    1eaa:	14 c0       	rjmp	.+40     	; 0x1ed4 <main+0x1072>
						}
					}
					else {
						minutes_units = 0;
    1eac:	10 92 73 00 	sts	0x0073, r1
						minutes_tens = 0;
    1eb0:	10 92 74 00 	sts	0x0074, r1
						hours_units++;
    1eb4:	80 91 75 00 	lds	r24, 0x0075
    1eb8:	8f 5f       	subi	r24, 0xFF	; 255
    1eba:	80 93 75 00 	sts	0x0075, r24
						if(hours_units == 10) {
    1ebe:	80 91 75 00 	lds	r24, 0x0075
    1ec2:	8a 30       	cpi	r24, 0x0A	; 10
    1ec4:	39 f4       	brne	.+14     	; 0x1ed4 <main+0x1072>
							hours_units = 0;
    1ec6:	10 92 75 00 	sts	0x0075, r1
							hours_tens++;
    1eca:	80 91 76 00 	lds	r24, 0x0076
    1ece:	8f 5f       	subi	r24, 0xFF	; 255
    1ed0:	80 93 76 00 	sts	0x0076, r24
						}
					}
				}
			}
			if((PINB & (1 << PB4))) {  // Reset flag when button is released
    1ed4:	e6 e3       	ldi	r30, 0x36	; 54
    1ed6:	f0 e0       	ldi	r31, 0x00	; 0
    1ed8:	80 81       	ld	r24, Z
    1eda:	88 2f       	mov	r24, r24
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	80 71       	andi	r24, 0x10	; 16
    1ee0:	90 70       	andi	r25, 0x00	; 0
    1ee2:	00 97       	sbiw	r24, 0x00	; 0
    1ee4:	11 f0       	breq	.+4      	; 0x1eea <main+0x1088>
				min_inc_flag = 0;
    1ee6:	10 92 6c 00 	sts	0x006C, r1
			}

			/******* Seconds Decrement *******/
			if((!(PINB & (1 << PB5))) && (sec_dec_flag == 0)) {
    1eea:	e6 e3       	ldi	r30, 0x36	; 54
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	80 81       	ld	r24, Z
    1ef0:	88 2f       	mov	r24, r24
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	80 72       	andi	r24, 0x20	; 32
    1ef6:	90 70       	andi	r25, 0x00	; 0
    1ef8:	00 97       	sbiw	r24, 0x00	; 0
    1efa:	09 f0       	breq	.+2      	; 0x1efe <main+0x109c>
    1efc:	f2 c0       	rjmp	.+484    	; 0x20e2 <main+0x1280>
    1efe:	80 91 6f 00 	lds	r24, 0x006F
    1f02:	88 23       	and	r24, r24
    1f04:	09 f0       	breq	.+2      	; 0x1f08 <main+0x10a6>
    1f06:	ed c0       	rjmp	.+474    	; 0x20e2 <main+0x1280>
    1f08:	80 e0       	ldi	r24, 0x00	; 0
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	a8 e4       	ldi	r26, 0x48	; 72
    1f0e:	b2 e4       	ldi	r27, 0x42	; 66
    1f10:	89 8f       	std	Y+25, r24	; 0x19
    1f12:	9a 8f       	std	Y+26, r25	; 0x1a
    1f14:	ab 8f       	std	Y+27, r26	; 0x1b
    1f16:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f18:	69 8d       	ldd	r22, Y+25	; 0x19
    1f1a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	4a e7       	ldi	r20, 0x7A	; 122
    1f26:	55 e4       	ldi	r21, 0x45	; 69
    1f28:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f2c:	dc 01       	movw	r26, r24
    1f2e:	cb 01       	movw	r24, r22
    1f30:	8d 8b       	std	Y+21, r24	; 0x15
    1f32:	9e 8b       	std	Y+22, r25	; 0x16
    1f34:	af 8b       	std	Y+23, r26	; 0x17
    1f36:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1f38:	6d 89       	ldd	r22, Y+21	; 0x15
    1f3a:	7e 89       	ldd	r23, Y+22	; 0x16
    1f3c:	8f 89       	ldd	r24, Y+23	; 0x17
    1f3e:	98 8d       	ldd	r25, Y+24	; 0x18
    1f40:	20 e0       	ldi	r18, 0x00	; 0
    1f42:	30 e0       	ldi	r19, 0x00	; 0
    1f44:	40 e8       	ldi	r20, 0x80	; 128
    1f46:	5f e3       	ldi	r21, 0x3F	; 63
    1f48:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f4c:	88 23       	and	r24, r24
    1f4e:	2c f4       	brge	.+10     	; 0x1f5a <main+0x10f8>
		__ticks = 1;
    1f50:	81 e0       	ldi	r24, 0x01	; 1
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	9c 8b       	std	Y+20, r25	; 0x14
    1f56:	8b 8b       	std	Y+19, r24	; 0x13
    1f58:	3f c0       	rjmp	.+126    	; 0x1fd8 <main+0x1176>
	else if (__tmp > 65535)
    1f5a:	6d 89       	ldd	r22, Y+21	; 0x15
    1f5c:	7e 89       	ldd	r23, Y+22	; 0x16
    1f5e:	8f 89       	ldd	r24, Y+23	; 0x17
    1f60:	98 8d       	ldd	r25, Y+24	; 0x18
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	3f ef       	ldi	r19, 0xFF	; 255
    1f66:	4f e7       	ldi	r20, 0x7F	; 127
    1f68:	57 e4       	ldi	r21, 0x47	; 71
    1f6a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f6e:	18 16       	cp	r1, r24
    1f70:	4c f5       	brge	.+82     	; 0x1fc4 <main+0x1162>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f72:	69 8d       	ldd	r22, Y+25	; 0x19
    1f74:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f7a:	20 e0       	ldi	r18, 0x00	; 0
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	40 e2       	ldi	r20, 0x20	; 32
    1f80:	51 e4       	ldi	r21, 0x41	; 65
    1f82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f86:	dc 01       	movw	r26, r24
    1f88:	cb 01       	movw	r24, r22
    1f8a:	bc 01       	movw	r22, r24
    1f8c:	cd 01       	movw	r24, r26
    1f8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f92:	dc 01       	movw	r26, r24
    1f94:	cb 01       	movw	r24, r22
    1f96:	9c 8b       	std	Y+20, r25	; 0x14
    1f98:	8b 8b       	std	Y+19, r24	; 0x13
    1f9a:	0f c0       	rjmp	.+30     	; 0x1fba <main+0x1158>
    1f9c:	80 e9       	ldi	r24, 0x90	; 144
    1f9e:	91 e0       	ldi	r25, 0x01	; 1
    1fa0:	9a 8b       	std	Y+18, r25	; 0x12
    1fa2:	89 8b       	std	Y+17, r24	; 0x11
    1fa4:	89 89       	ldd	r24, Y+17	; 0x11
    1fa6:	9a 89       	ldd	r25, Y+18	; 0x12
    1fa8:	01 97       	sbiw	r24, 0x01	; 1
    1faa:	f1 f7       	brne	.-4      	; 0x1fa8 <main+0x1146>
    1fac:	9a 8b       	std	Y+18, r25	; 0x12
    1fae:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fb0:	8b 89       	ldd	r24, Y+19	; 0x13
    1fb2:	9c 89       	ldd	r25, Y+20	; 0x14
    1fb4:	01 97       	sbiw	r24, 0x01	; 1
    1fb6:	9c 8b       	std	Y+20, r25	; 0x14
    1fb8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fba:	8b 89       	ldd	r24, Y+19	; 0x13
    1fbc:	9c 89       	ldd	r25, Y+20	; 0x14
    1fbe:	00 97       	sbiw	r24, 0x00	; 0
    1fc0:	69 f7       	brne	.-38     	; 0x1f9c <main+0x113a>
    1fc2:	14 c0       	rjmp	.+40     	; 0x1fec <main+0x118a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fc4:	6d 89       	ldd	r22, Y+21	; 0x15
    1fc6:	7e 89       	ldd	r23, Y+22	; 0x16
    1fc8:	8f 89       	ldd	r24, Y+23	; 0x17
    1fca:	98 8d       	ldd	r25, Y+24	; 0x18
    1fcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fd0:	dc 01       	movw	r26, r24
    1fd2:	cb 01       	movw	r24, r22
    1fd4:	9c 8b       	std	Y+20, r25	; 0x14
    1fd6:	8b 8b       	std	Y+19, r24	; 0x13
    1fd8:	8b 89       	ldd	r24, Y+19	; 0x13
    1fda:	9c 89       	ldd	r25, Y+20	; 0x14
    1fdc:	98 8b       	std	Y+16, r25	; 0x10
    1fde:	8f 87       	std	Y+15, r24	; 0x0f
    1fe0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fe2:	98 89       	ldd	r25, Y+16	; 0x10
    1fe4:	01 97       	sbiw	r24, 0x01	; 1
    1fe6:	f1 f7       	brne	.-4      	; 0x1fe4 <main+0x1182>
    1fe8:	98 8b       	std	Y+16, r25	; 0x10
    1fea:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(50);
				if(!(PINB & (1 << PB5))) {  // Ensure button is still pressed
    1fec:	e6 e3       	ldi	r30, 0x36	; 54
    1fee:	f0 e0       	ldi	r31, 0x00	; 0
    1ff0:	80 81       	ld	r24, Z
    1ff2:	88 2f       	mov	r24, r24
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	80 72       	andi	r24, 0x20	; 32
    1ff8:	90 70       	andi	r25, 0x00	; 0
    1ffa:	00 97       	sbiw	r24, 0x00	; 0
    1ffc:	09 f0       	breq	.+2      	; 0x2000 <main+0x119e>
    1ffe:	71 c0       	rjmp	.+226    	; 0x20e2 <main+0x1280>
					sec_dec_flag = 1;
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	80 93 6f 00 	sts	0x006F, r24
					if(!(seconds_units == 0 && seconds_tens == 0)) {
    2006:	80 91 71 00 	lds	r24, 0x0071
    200a:	88 23       	and	r24, r24
    200c:	21 f4       	brne	.+8      	; 0x2016 <main+0x11b4>
    200e:	80 91 72 00 	lds	r24, 0x0072
    2012:	88 23       	and	r24, r24
    2014:	b9 f0       	breq	.+46     	; 0x2044 <main+0x11e2>
						if(seconds_units == 0 && seconds_tens != 0) {
    2016:	80 91 71 00 	lds	r24, 0x0071
    201a:	88 23       	and	r24, r24
    201c:	69 f4       	brne	.+26     	; 0x2038 <main+0x11d6>
    201e:	80 91 72 00 	lds	r24, 0x0072
    2022:	88 23       	and	r24, r24
    2024:	49 f0       	breq	.+18     	; 0x2038 <main+0x11d6>
							seconds_units = 9;
    2026:	89 e0       	ldi	r24, 0x09	; 9
    2028:	80 93 71 00 	sts	0x0071, r24
							seconds_tens--;
    202c:	80 91 72 00 	lds	r24, 0x0072
    2030:	81 50       	subi	r24, 0x01	; 1
    2032:	80 93 72 00 	sts	0x0072, r24
    2036:	55 c0       	rjmp	.+170    	; 0x20e2 <main+0x1280>
						} else {
							seconds_units--;
    2038:	80 91 71 00 	lds	r24, 0x0071
    203c:	81 50       	subi	r24, 0x01	; 1
    203e:	80 93 71 00 	sts	0x0071, r24
    2042:	4f c0       	rjmp	.+158    	; 0x20e2 <main+0x1280>
						}
					}
					else {
						if((minutes_units != 0) || (minutes_tens != 0)) {
    2044:	80 91 73 00 	lds	r24, 0x0073
    2048:	88 23       	and	r24, r24
    204a:	21 f4       	brne	.+8      	; 0x2054 <main+0x11f2>
    204c:	80 91 74 00 	lds	r24, 0x0074
    2050:	88 23       	and	r24, r24
    2052:	e9 f0       	breq	.+58     	; 0x208e <main+0x122c>
							if(minutes_units == 0 && minutes_tens != 0) {
    2054:	80 91 73 00 	lds	r24, 0x0073
    2058:	88 23       	and	r24, r24
    205a:	69 f4       	brne	.+26     	; 0x2076 <main+0x1214>
    205c:	80 91 74 00 	lds	r24, 0x0074
    2060:	88 23       	and	r24, r24
    2062:	49 f0       	breq	.+18     	; 0x2076 <main+0x1214>
								minutes_units = 9;
    2064:	89 e0       	ldi	r24, 0x09	; 9
    2066:	80 93 73 00 	sts	0x0073, r24
								minutes_tens--;
    206a:	80 91 74 00 	lds	r24, 0x0074
    206e:	81 50       	subi	r24, 0x01	; 1
    2070:	80 93 74 00 	sts	0x0074, r24
    2074:	05 c0       	rjmp	.+10     	; 0x2080 <main+0x121e>
							} else {
								minutes_units--;
    2076:	80 91 73 00 	lds	r24, 0x0073
    207a:	81 50       	subi	r24, 0x01	; 1
    207c:	80 93 73 00 	sts	0x0073, r24
							}
							seconds_units = 9;
    2080:	89 e0       	ldi	r24, 0x09	; 9
    2082:	80 93 71 00 	sts	0x0071, r24
							seconds_tens = 5;
    2086:	85 e0       	ldi	r24, 0x05	; 5
    2088:	80 93 72 00 	sts	0x0072, r24
    208c:	2a c0       	rjmp	.+84     	; 0x20e2 <main+0x1280>
						}
						else {
							if((hours_units != 0) || (hours_tens != 0)) {
    208e:	80 91 75 00 	lds	r24, 0x0075
    2092:	88 23       	and	r24, r24
    2094:	21 f4       	brne	.+8      	; 0x209e <main+0x123c>
    2096:	80 91 76 00 	lds	r24, 0x0076
    209a:	88 23       	and	r24, r24
    209c:	11 f1       	breq	.+68     	; 0x20e2 <main+0x1280>
								if(hours_units == 0 && hours_tens != 0) {
    209e:	80 91 75 00 	lds	r24, 0x0075
    20a2:	88 23       	and	r24, r24
    20a4:	69 f4       	brne	.+26     	; 0x20c0 <main+0x125e>
    20a6:	80 91 76 00 	lds	r24, 0x0076
    20aa:	88 23       	and	r24, r24
    20ac:	49 f0       	breq	.+18     	; 0x20c0 <main+0x125e>
									hours_units = 9;
    20ae:	89 e0       	ldi	r24, 0x09	; 9
    20b0:	80 93 75 00 	sts	0x0075, r24
									hours_tens--;
    20b4:	80 91 76 00 	lds	r24, 0x0076
    20b8:	81 50       	subi	r24, 0x01	; 1
    20ba:	80 93 76 00 	sts	0x0076, r24
    20be:	05 c0       	rjmp	.+10     	; 0x20ca <main+0x1268>
								} else {
									hours_units--;
    20c0:	80 91 75 00 	lds	r24, 0x0075
    20c4:	81 50       	subi	r24, 0x01	; 1
    20c6:	80 93 75 00 	sts	0x0075, r24
								}
								minutes_units = 9;
    20ca:	89 e0       	ldi	r24, 0x09	; 9
    20cc:	80 93 73 00 	sts	0x0073, r24
								minutes_tens = 5;
    20d0:	85 e0       	ldi	r24, 0x05	; 5
    20d2:	80 93 74 00 	sts	0x0074, r24
								seconds_units = 9;
    20d6:	89 e0       	ldi	r24, 0x09	; 9
    20d8:	80 93 71 00 	sts	0x0071, r24
								seconds_tens = 5;
    20dc:	85 e0       	ldi	r24, 0x05	; 5
    20de:	80 93 72 00 	sts	0x0072, r24
							}
						}
					}
				}
			}
			if((PINB & (1 << PB5))) {  // Reset flag when button is released
    20e2:	e6 e3       	ldi	r30, 0x36	; 54
    20e4:	f0 e0       	ldi	r31, 0x00	; 0
    20e6:	80 81       	ld	r24, Z
    20e8:	88 2f       	mov	r24, r24
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	80 72       	andi	r24, 0x20	; 32
    20ee:	90 70       	andi	r25, 0x00	; 0
    20f0:	00 97       	sbiw	r24, 0x00	; 0
    20f2:	11 f0       	breq	.+4      	; 0x20f8 <main+0x1296>
				sec_dec_flag = 0;
    20f4:	10 92 6f 00 	sts	0x006F, r1
			}

			/****** Seconds Increment ******/
			if((!(PINB & (1 << PB6))) && (sec_inc_flag == 0)) {
    20f8:	e6 e3       	ldi	r30, 0x36	; 54
    20fa:	f0 e0       	ldi	r31, 0x00	; 0
    20fc:	80 81       	ld	r24, Z
    20fe:	88 2f       	mov	r24, r24
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	80 74       	andi	r24, 0x40	; 64
    2104:	90 70       	andi	r25, 0x00	; 0
    2106:	00 97       	sbiw	r24, 0x00	; 0
    2108:	09 f0       	breq	.+2      	; 0x210c <main+0x12aa>
    210a:	ce c0       	rjmp	.+412    	; 0x22a8 <main+0x1446>
    210c:	80 91 6e 00 	lds	r24, 0x006E
    2110:	88 23       	and	r24, r24
    2112:	09 f0       	breq	.+2      	; 0x2116 <main+0x12b4>
    2114:	c9 c0       	rjmp	.+402    	; 0x22a8 <main+0x1446>
    2116:	80 e0       	ldi	r24, 0x00	; 0
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	a8 e4       	ldi	r26, 0x48	; 72
    211c:	b2 e4       	ldi	r27, 0x42	; 66
    211e:	8b 87       	std	Y+11, r24	; 0x0b
    2120:	9c 87       	std	Y+12, r25	; 0x0c
    2122:	ad 87       	std	Y+13, r26	; 0x0d
    2124:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2126:	6b 85       	ldd	r22, Y+11	; 0x0b
    2128:	7c 85       	ldd	r23, Y+12	; 0x0c
    212a:	8d 85       	ldd	r24, Y+13	; 0x0d
    212c:	9e 85       	ldd	r25, Y+14	; 0x0e
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	4a e7       	ldi	r20, 0x7A	; 122
    2134:	55 e4       	ldi	r21, 0x45	; 69
    2136:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    213a:	dc 01       	movw	r26, r24
    213c:	cb 01       	movw	r24, r22
    213e:	8f 83       	std	Y+7, r24	; 0x07
    2140:	98 87       	std	Y+8, r25	; 0x08
    2142:	a9 87       	std	Y+9, r26	; 0x09
    2144:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2146:	6f 81       	ldd	r22, Y+7	; 0x07
    2148:	78 85       	ldd	r23, Y+8	; 0x08
    214a:	89 85       	ldd	r24, Y+9	; 0x09
    214c:	9a 85       	ldd	r25, Y+10	; 0x0a
    214e:	20 e0       	ldi	r18, 0x00	; 0
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	40 e8       	ldi	r20, 0x80	; 128
    2154:	5f e3       	ldi	r21, 0x3F	; 63
    2156:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    215a:	88 23       	and	r24, r24
    215c:	2c f4       	brge	.+10     	; 0x2168 <main+0x1306>
		__ticks = 1;
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	9e 83       	std	Y+6, r25	; 0x06
    2164:	8d 83       	std	Y+5, r24	; 0x05
    2166:	3f c0       	rjmp	.+126    	; 0x21e6 <main+0x1384>
	else if (__tmp > 65535)
    2168:	6f 81       	ldd	r22, Y+7	; 0x07
    216a:	78 85       	ldd	r23, Y+8	; 0x08
    216c:	89 85       	ldd	r24, Y+9	; 0x09
    216e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2170:	20 e0       	ldi	r18, 0x00	; 0
    2172:	3f ef       	ldi	r19, 0xFF	; 255
    2174:	4f e7       	ldi	r20, 0x7F	; 127
    2176:	57 e4       	ldi	r21, 0x47	; 71
    2178:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    217c:	18 16       	cp	r1, r24
    217e:	4c f5       	brge	.+82     	; 0x21d2 <main+0x1370>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2180:	6b 85       	ldd	r22, Y+11	; 0x0b
    2182:	7c 85       	ldd	r23, Y+12	; 0x0c
    2184:	8d 85       	ldd	r24, Y+13	; 0x0d
    2186:	9e 85       	ldd	r25, Y+14	; 0x0e
    2188:	20 e0       	ldi	r18, 0x00	; 0
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	40 e2       	ldi	r20, 0x20	; 32
    218e:	51 e4       	ldi	r21, 0x41	; 65
    2190:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2194:	dc 01       	movw	r26, r24
    2196:	cb 01       	movw	r24, r22
    2198:	bc 01       	movw	r22, r24
    219a:	cd 01       	movw	r24, r26
    219c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21a0:	dc 01       	movw	r26, r24
    21a2:	cb 01       	movw	r24, r22
    21a4:	9e 83       	std	Y+6, r25	; 0x06
    21a6:	8d 83       	std	Y+5, r24	; 0x05
    21a8:	0f c0       	rjmp	.+30     	; 0x21c8 <main+0x1366>
    21aa:	80 e9       	ldi	r24, 0x90	; 144
    21ac:	91 e0       	ldi	r25, 0x01	; 1
    21ae:	9c 83       	std	Y+4, r25	; 0x04
    21b0:	8b 83       	std	Y+3, r24	; 0x03
    21b2:	8b 81       	ldd	r24, Y+3	; 0x03
    21b4:	9c 81       	ldd	r25, Y+4	; 0x04
    21b6:	01 97       	sbiw	r24, 0x01	; 1
    21b8:	f1 f7       	brne	.-4      	; 0x21b6 <main+0x1354>
    21ba:	9c 83       	std	Y+4, r25	; 0x04
    21bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21be:	8d 81       	ldd	r24, Y+5	; 0x05
    21c0:	9e 81       	ldd	r25, Y+6	; 0x06
    21c2:	01 97       	sbiw	r24, 0x01	; 1
    21c4:	9e 83       	std	Y+6, r25	; 0x06
    21c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21c8:	8d 81       	ldd	r24, Y+5	; 0x05
    21ca:	9e 81       	ldd	r25, Y+6	; 0x06
    21cc:	00 97       	sbiw	r24, 0x00	; 0
    21ce:	69 f7       	brne	.-38     	; 0x21aa <main+0x1348>
    21d0:	14 c0       	rjmp	.+40     	; 0x21fa <main+0x1398>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21d2:	6f 81       	ldd	r22, Y+7	; 0x07
    21d4:	78 85       	ldd	r23, Y+8	; 0x08
    21d6:	89 85       	ldd	r24, Y+9	; 0x09
    21d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21de:	dc 01       	movw	r26, r24
    21e0:	cb 01       	movw	r24, r22
    21e2:	9e 83       	std	Y+6, r25	; 0x06
    21e4:	8d 83       	std	Y+5, r24	; 0x05
    21e6:	8d 81       	ldd	r24, Y+5	; 0x05
    21e8:	9e 81       	ldd	r25, Y+6	; 0x06
    21ea:	9a 83       	std	Y+2, r25	; 0x02
    21ec:	89 83       	std	Y+1, r24	; 0x01
    21ee:	89 81       	ldd	r24, Y+1	; 0x01
    21f0:	9a 81       	ldd	r25, Y+2	; 0x02
    21f2:	01 97       	sbiw	r24, 0x01	; 1
    21f4:	f1 f7       	brne	.-4      	; 0x21f2 <main+0x1390>
    21f6:	9a 83       	std	Y+2, r25	; 0x02
    21f8:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(50);
				if(!(PINB & (1 << PB6))) {  // Ensure button is still pressed
    21fa:	e6 e3       	ldi	r30, 0x36	; 54
    21fc:	f0 e0       	ldi	r31, 0x00	; 0
    21fe:	80 81       	ld	r24, Z
    2200:	88 2f       	mov	r24, r24
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	80 74       	andi	r24, 0x40	; 64
    2206:	90 70       	andi	r25, 0x00	; 0
    2208:	00 97       	sbiw	r24, 0x00	; 0
    220a:	09 f0       	breq	.+2      	; 0x220e <main+0x13ac>
    220c:	4d c0       	rjmp	.+154    	; 0x22a8 <main+0x1446>
					sec_inc_flag = 1;
    220e:	81 e0       	ldi	r24, 0x01	; 1
    2210:	80 93 6e 00 	sts	0x006E, r24
					if(!(seconds_units == 9 && seconds_tens == 5)) {
    2214:	80 91 71 00 	lds	r24, 0x0071
    2218:	89 30       	cpi	r24, 0x09	; 9
    221a:	21 f4       	brne	.+8      	; 0x2224 <main+0x13c2>
    221c:	80 91 72 00 	lds	r24, 0x0072
    2220:	85 30       	cpi	r24, 0x05	; 5
    2222:	89 f0       	breq	.+34     	; 0x2246 <main+0x13e4>
						seconds_units++;
    2224:	80 91 71 00 	lds	r24, 0x0071
    2228:	8f 5f       	subi	r24, 0xFF	; 255
    222a:	80 93 71 00 	sts	0x0071, r24
						if(seconds_units == 10) {
    222e:	80 91 71 00 	lds	r24, 0x0071
    2232:	8a 30       	cpi	r24, 0x0A	; 10
    2234:	c9 f5       	brne	.+114    	; 0x22a8 <main+0x1446>
							seconds_units = 0;
    2236:	10 92 71 00 	sts	0x0071, r1
							seconds_tens++;
    223a:	80 91 72 00 	lds	r24, 0x0072
    223e:	8f 5f       	subi	r24, 0xFF	; 255
    2240:	80 93 72 00 	sts	0x0072, r24
    2244:	31 c0       	rjmp	.+98     	; 0x22a8 <main+0x1446>
						}
					} else {  // If seconds are at 59
						seconds_units = 0;
    2246:	10 92 71 00 	sts	0x0071, r1
						seconds_tens = 0;
    224a:	10 92 72 00 	sts	0x0072, r1
						if(!(minutes_units == 9 && minutes_tens == 5)) {
    224e:	80 91 73 00 	lds	r24, 0x0073
    2252:	89 30       	cpi	r24, 0x09	; 9
    2254:	21 f4       	brne	.+8      	; 0x225e <main+0x13fc>
    2256:	80 91 74 00 	lds	r24, 0x0074
    225a:	85 30       	cpi	r24, 0x05	; 5
    225c:	89 f0       	breq	.+34     	; 0x2280 <main+0x141e>
							minutes_units++;
    225e:	80 91 73 00 	lds	r24, 0x0073
    2262:	8f 5f       	subi	r24, 0xFF	; 255
    2264:	80 93 73 00 	sts	0x0073, r24
							if(minutes_units == 10) {
    2268:	80 91 73 00 	lds	r24, 0x0073
    226c:	8a 30       	cpi	r24, 0x0A	; 10
    226e:	e1 f4       	brne	.+56     	; 0x22a8 <main+0x1446>
								minutes_units = 0;
    2270:	10 92 73 00 	sts	0x0073, r1
								minutes_tens++;
    2274:	80 91 74 00 	lds	r24, 0x0074
    2278:	8f 5f       	subi	r24, 0xFF	; 255
    227a:	80 93 74 00 	sts	0x0074, r24
    227e:	14 c0       	rjmp	.+40     	; 0x22a8 <main+0x1446>
							}
						} else {  // If minutes are also at 59, roll them over to 00
							minutes_units = 0;
    2280:	10 92 73 00 	sts	0x0073, r1
							minutes_tens = 0;
    2284:	10 92 74 00 	sts	0x0074, r1
							hours_units++;
    2288:	80 91 75 00 	lds	r24, 0x0075
    228c:	8f 5f       	subi	r24, 0xFF	; 255
    228e:	80 93 75 00 	sts	0x0075, r24
							if(hours_units == 10) {
    2292:	80 91 75 00 	lds	r24, 0x0075
    2296:	8a 30       	cpi	r24, 0x0A	; 10
    2298:	39 f4       	brne	.+14     	; 0x22a8 <main+0x1446>
								hours_units = 0;
    229a:	10 92 75 00 	sts	0x0075, r1
								hours_tens++;
    229e:	80 91 76 00 	lds	r24, 0x0076
    22a2:	8f 5f       	subi	r24, 0xFF	; 255
    22a4:	80 93 76 00 	sts	0x0076, r24
							}
						}
					}
				}
			}
			if((PINB & (1 << PB6))) {  // Reset flag when button is released
    22a8:	e6 e3       	ldi	r30, 0x36	; 54
    22aa:	f0 e0       	ldi	r31, 0x00	; 0
    22ac:	80 81       	ld	r24, Z
    22ae:	88 2f       	mov	r24, r24
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	80 74       	andi	r24, 0x40	; 64
    22b4:	90 70       	andi	r25, 0x00	; 0
    22b6:	00 97       	sbiw	r24, 0x00	; 0
    22b8:	11 f4       	brne	.+4      	; 0x22be <main+0x145c>
    22ba:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <main+0x92>
				sec_inc_flag = 0;
    22be:	10 92 6e 00 	sts	0x006E, r1
    22c2:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <main+0x92>

000022c6 <__vector_7>:


	}
}

ISR(TIMER1_COMPA_vect){
    22c6:	1f 92       	push	r1
    22c8:	0f 92       	push	r0
    22ca:	0f b6       	in	r0, 0x3f	; 63
    22cc:	0f 92       	push	r0
    22ce:	11 24       	eor	r1, r1
    22d0:	8f 93       	push	r24
    22d2:	af 93       	push	r26
    22d4:	bf 93       	push	r27
    22d6:	ef 93       	push	r30
    22d8:	ff 93       	push	r31
    22da:	df 93       	push	r29
    22dc:	cf 93       	push	r28
    22de:	cd b7       	in	r28, 0x3d	; 61
    22e0:	de b7       	in	r29, 0x3e	; 62
	if((running_flag==1)&&(count_up_flag==1)){
    22e2:	80 91 68 00 	lds	r24, 0x0068
    22e6:	81 30       	cpi	r24, 0x01	; 1
    22e8:	09 f0       	breq	.+2      	; 0x22ec <__vector_7+0x26>
    22ea:	50 c0       	rjmp	.+160    	; 0x238c <__vector_7+0xc6>
    22ec:	80 91 69 00 	lds	r24, 0x0069
    22f0:	81 30       	cpi	r24, 0x01	; 1
    22f2:	09 f0       	breq	.+2      	; 0x22f6 <__vector_7+0x30>
    22f4:	4b c0       	rjmp	.+150    	; 0x238c <__vector_7+0xc6>

		seconds_units++;
    22f6:	80 91 71 00 	lds	r24, 0x0071
    22fa:	8f 5f       	subi	r24, 0xFF	; 255
    22fc:	80 93 71 00 	sts	0x0071, r24
		if(seconds_units==10){
    2300:	80 91 71 00 	lds	r24, 0x0071
    2304:	8a 30       	cpi	r24, 0x0A	; 10
    2306:	09 f0       	breq	.+2      	; 0x230a <__vector_7+0x44>
    2308:	c8 c0       	rjmp	.+400    	; 0x249a <__vector_7+0x1d4>
			seconds_units=0;
    230a:	10 92 71 00 	sts	0x0071, r1
			seconds_tens++;
    230e:	80 91 72 00 	lds	r24, 0x0072
    2312:	8f 5f       	subi	r24, 0xFF	; 255
    2314:	80 93 72 00 	sts	0x0072, r24
			if(seconds_tens==6){
    2318:	80 91 72 00 	lds	r24, 0x0072
    231c:	86 30       	cpi	r24, 0x06	; 6
    231e:	09 f0       	breq	.+2      	; 0x2322 <__vector_7+0x5c>
    2320:	bc c0       	rjmp	.+376    	; 0x249a <__vector_7+0x1d4>
				seconds_tens=0;
    2322:	10 92 72 00 	sts	0x0072, r1
				minutes_units++;
    2326:	80 91 73 00 	lds	r24, 0x0073
    232a:	8f 5f       	subi	r24, 0xFF	; 255
    232c:	80 93 73 00 	sts	0x0073, r24

				if(minutes_units==10){
    2330:	80 91 73 00 	lds	r24, 0x0073
    2334:	8a 30       	cpi	r24, 0x0A	; 10
    2336:	09 f0       	breq	.+2      	; 0x233a <__vector_7+0x74>
    2338:	b0 c0       	rjmp	.+352    	; 0x249a <__vector_7+0x1d4>
					minutes_units=0;
    233a:	10 92 73 00 	sts	0x0073, r1
					minutes_tens++;
    233e:	80 91 74 00 	lds	r24, 0x0074
    2342:	8f 5f       	subi	r24, 0xFF	; 255
    2344:	80 93 74 00 	sts	0x0074, r24

					if(minutes_tens==6){
    2348:	80 91 74 00 	lds	r24, 0x0074
    234c:	86 30       	cpi	r24, 0x06	; 6
    234e:	09 f0       	breq	.+2      	; 0x2352 <__vector_7+0x8c>
    2350:	a4 c0       	rjmp	.+328    	; 0x249a <__vector_7+0x1d4>
						minutes_tens=0;
    2352:	10 92 74 00 	sts	0x0074, r1
						hours_units++;
    2356:	80 91 75 00 	lds	r24, 0x0075
    235a:	8f 5f       	subi	r24, 0xFF	; 255
    235c:	80 93 75 00 	sts	0x0075, r24

						if(hours_units==10){
    2360:	80 91 75 00 	lds	r24, 0x0075
    2364:	8a 30       	cpi	r24, 0x0A	; 10
    2366:	09 f0       	breq	.+2      	; 0x236a <__vector_7+0xa4>
    2368:	98 c0       	rjmp	.+304    	; 0x249a <__vector_7+0x1d4>
							hours_units=0;
    236a:	10 92 75 00 	sts	0x0075, r1
							hours_tens++;
    236e:	80 91 76 00 	lds	r24, 0x0076
    2372:	8f 5f       	subi	r24, 0xFF	; 255
    2374:	80 93 76 00 	sts	0x0076, r24

							if(hours_tens==10){
    2378:	80 91 76 00 	lds	r24, 0x0076
    237c:	8a 30       	cpi	r24, 0x0A	; 10
    237e:	09 f0       	breq	.+2      	; 0x2382 <__vector_7+0xbc>
    2380:	8c c0       	rjmp	.+280    	; 0x249a <__vector_7+0x1d4>
								hours_tens=0;
    2382:	10 92 76 00 	sts	0x0076, r1
								hours_units=0;
    2386:	10 92 75 00 	sts	0x0075, r1
    238a:	87 c0       	rjmp	.+270    	; 0x249a <__vector_7+0x1d4>
					}
				}
			}
		}
	}
	else if((running_flag==1)&&(count_up_flag==0)){
    238c:	80 91 68 00 	lds	r24, 0x0068
    2390:	81 30       	cpi	r24, 0x01	; 1
    2392:	09 f0       	breq	.+2      	; 0x2396 <__vector_7+0xd0>
    2394:	82 c0       	rjmp	.+260    	; 0x249a <__vector_7+0x1d4>
    2396:	80 91 69 00 	lds	r24, 0x0069
    239a:	88 23       	and	r24, r24
    239c:	09 f0       	breq	.+2      	; 0x23a0 <__vector_7+0xda>
    239e:	7d c0       	rjmp	.+250    	; 0x249a <__vector_7+0x1d4>

		if(seconds_units==0){
    23a0:	80 91 71 00 	lds	r24, 0x0071
    23a4:	88 23       	and	r24, r24
    23a6:	09 f0       	breq	.+2      	; 0x23aa <__vector_7+0xe4>
    23a8:	73 c0       	rjmp	.+230    	; 0x2490 <__vector_7+0x1ca>
			if(seconds_tens==0){
    23aa:	80 91 72 00 	lds	r24, 0x0072
    23ae:	88 23       	and	r24, r24
    23b0:	09 f0       	breq	.+2      	; 0x23b4 <__vector_7+0xee>
    23b2:	65 c0       	rjmp	.+202    	; 0x247e <__vector_7+0x1b8>
				if(minutes_units==0){
    23b4:	80 91 73 00 	lds	r24, 0x0073
    23b8:	88 23       	and	r24, r24
    23ba:	09 f0       	breq	.+2      	; 0x23be <__vector_7+0xf8>
    23bc:	54 c0       	rjmp	.+168    	; 0x2466 <__vector_7+0x1a0>
					if(minutes_tens==0){
    23be:	80 91 74 00 	lds	r24, 0x0074
    23c2:	88 23       	and	r24, r24
    23c4:	09 f0       	breq	.+2      	; 0x23c8 <__vector_7+0x102>
    23c6:	40 c0       	rjmp	.+128    	; 0x2448 <__vector_7+0x182>
						if(hours_units==0){
    23c8:	80 91 75 00 	lds	r24, 0x0075
    23cc:	88 23       	and	r24, r24
    23ce:	51 f5       	brne	.+84     	; 0x2424 <__vector_7+0x15e>
							if(hours_tens==0){
    23d0:	80 91 76 00 	lds	r24, 0x0076
    23d4:	88 23       	and	r24, r24
    23d6:	89 f4       	brne	.+34     	; 0x23fa <__vector_7+0x134>
								DDRD |= (1<<PD0);
    23d8:	a1 e3       	ldi	r26, 0x31	; 49
    23da:	b0 e0       	ldi	r27, 0x00	; 0
    23dc:	e1 e3       	ldi	r30, 0x31	; 49
    23de:	f0 e0       	ldi	r31, 0x00	; 0
    23e0:	80 81       	ld	r24, Z
    23e2:	81 60       	ori	r24, 0x01	; 1
    23e4:	8c 93       	st	X, r24
								PORTD |= (1<<PD0);
    23e6:	a2 e3       	ldi	r26, 0x32	; 50
    23e8:	b0 e0       	ldi	r27, 0x00	; 0
    23ea:	e2 e3       	ldi	r30, 0x32	; 50
    23ec:	f0 e0       	ldi	r31, 0x00	; 0
    23ee:	80 81       	ld	r24, Z
    23f0:	81 60       	ori	r24, 0x01	; 1
    23f2:	8c 93       	st	X, r24
								running_flag=0;
    23f4:	10 92 68 00 	sts	0x0068, r1
    23f8:	50 c0       	rjmp	.+160    	; 0x249a <__vector_7+0x1d4>
							}
							else{
								hours_units=9;
    23fa:	89 e0       	ldi	r24, 0x09	; 9
    23fc:	80 93 75 00 	sts	0x0075, r24
								hours_tens--;
    2400:	80 91 76 00 	lds	r24, 0x0076
    2404:	81 50       	subi	r24, 0x01	; 1
    2406:	80 93 76 00 	sts	0x0076, r24
								minutes_tens=5;
    240a:	85 e0       	ldi	r24, 0x05	; 5
    240c:	80 93 74 00 	sts	0x0074, r24
								minutes_units=9;
    2410:	89 e0       	ldi	r24, 0x09	; 9
    2412:	80 93 73 00 	sts	0x0073, r24
								seconds_tens=5;
    2416:	85 e0       	ldi	r24, 0x05	; 5
    2418:	80 93 72 00 	sts	0x0072, r24
								seconds_units=9;
    241c:	89 e0       	ldi	r24, 0x09	; 9
    241e:	80 93 71 00 	sts	0x0071, r24
    2422:	3b c0       	rjmp	.+118    	; 0x249a <__vector_7+0x1d4>
							}
						}
						else{
							hours_units--;
    2424:	80 91 75 00 	lds	r24, 0x0075
    2428:	81 50       	subi	r24, 0x01	; 1
    242a:	80 93 75 00 	sts	0x0075, r24
							minutes_tens=5;
    242e:	85 e0       	ldi	r24, 0x05	; 5
    2430:	80 93 74 00 	sts	0x0074, r24
							minutes_units=9;
    2434:	89 e0       	ldi	r24, 0x09	; 9
    2436:	80 93 73 00 	sts	0x0073, r24
							seconds_tens=5;
    243a:	85 e0       	ldi	r24, 0x05	; 5
    243c:	80 93 72 00 	sts	0x0072, r24
							seconds_units=9;
    2440:	89 e0       	ldi	r24, 0x09	; 9
    2442:	80 93 71 00 	sts	0x0071, r24
    2446:	29 c0       	rjmp	.+82     	; 0x249a <__vector_7+0x1d4>
						}

					}
					else{
						minutes_units=9;
    2448:	89 e0       	ldi	r24, 0x09	; 9
    244a:	80 93 73 00 	sts	0x0073, r24
						minutes_tens--;
    244e:	80 91 74 00 	lds	r24, 0x0074
    2452:	81 50       	subi	r24, 0x01	; 1
    2454:	80 93 74 00 	sts	0x0074, r24
						seconds_tens=5;
    2458:	85 e0       	ldi	r24, 0x05	; 5
    245a:	80 93 72 00 	sts	0x0072, r24
						seconds_units=9;
    245e:	89 e0       	ldi	r24, 0x09	; 9
    2460:	80 93 71 00 	sts	0x0071, r24
    2464:	1a c0       	rjmp	.+52     	; 0x249a <__vector_7+0x1d4>
					}
				}
				else{
					minutes_units--;
    2466:	80 91 73 00 	lds	r24, 0x0073
    246a:	81 50       	subi	r24, 0x01	; 1
    246c:	80 93 73 00 	sts	0x0073, r24
					seconds_tens=5;
    2470:	85 e0       	ldi	r24, 0x05	; 5
    2472:	80 93 72 00 	sts	0x0072, r24
					seconds_units=9;
    2476:	89 e0       	ldi	r24, 0x09	; 9
    2478:	80 93 71 00 	sts	0x0071, r24
    247c:	0e c0       	rjmp	.+28     	; 0x249a <__vector_7+0x1d4>
				}
			}
			else{
				seconds_units=9;
    247e:	89 e0       	ldi	r24, 0x09	; 9
    2480:	80 93 71 00 	sts	0x0071, r24
				seconds_tens--;
    2484:	80 91 72 00 	lds	r24, 0x0072
    2488:	81 50       	subi	r24, 0x01	; 1
    248a:	80 93 72 00 	sts	0x0072, r24
    248e:	05 c0       	rjmp	.+10     	; 0x249a <__vector_7+0x1d4>
			}
		}
		else{
			seconds_units--;
    2490:	80 91 71 00 	lds	r24, 0x0071
    2494:	81 50       	subi	r24, 0x01	; 1
    2496:	80 93 71 00 	sts	0x0071, r24
		}

	}
}
    249a:	cf 91       	pop	r28
    249c:	df 91       	pop	r29
    249e:	ff 91       	pop	r31
    24a0:	ef 91       	pop	r30
    24a2:	bf 91       	pop	r27
    24a4:	af 91       	pop	r26
    24a6:	8f 91       	pop	r24
    24a8:	0f 90       	pop	r0
    24aa:	0f be       	out	0x3f, r0	; 63
    24ac:	0f 90       	pop	r0
    24ae:	1f 90       	pop	r1
    24b0:	18 95       	reti

000024b2 <__vector_1>:
ISR(INT0_vect){
    24b2:	1f 92       	push	r1
    24b4:	0f 92       	push	r0
    24b6:	0f b6       	in	r0, 0x3f	; 63
    24b8:	0f 92       	push	r0
    24ba:	11 24       	eor	r1, r1
    24bc:	df 93       	push	r29
    24be:	cf 93       	push	r28
    24c0:	cd b7       	in	r28, 0x3d	; 61
    24c2:	de b7       	in	r29, 0x3e	; 62
	seconds_units=0;  //reset the time
    24c4:	10 92 71 00 	sts	0x0071, r1
	seconds_tens=0;
    24c8:	10 92 72 00 	sts	0x0072, r1
	minutes_units=0;
    24cc:	10 92 73 00 	sts	0x0073, r1
	minutes_tens=0;
    24d0:	10 92 74 00 	sts	0x0074, r1
	hours_units=0;
    24d4:	10 92 75 00 	sts	0x0075, r1
	hours_tens=0;
    24d8:	10 92 76 00 	sts	0x0076, r1
}
    24dc:	cf 91       	pop	r28
    24de:	df 91       	pop	r29
    24e0:	0f 90       	pop	r0
    24e2:	0f be       	out	0x3f, r0	; 63
    24e4:	0f 90       	pop	r0
    24e6:	1f 90       	pop	r1
    24e8:	18 95       	reti

000024ea <__vector_2>:
ISR(INT1_vect){
    24ea:	1f 92       	push	r1
    24ec:	0f 92       	push	r0
    24ee:	0f b6       	in	r0, 0x3f	; 63
    24f0:	0f 92       	push	r0
    24f2:	11 24       	eor	r1, r1
    24f4:	8f 93       	push	r24
    24f6:	df 93       	push	r29
    24f8:	cf 93       	push	r28
    24fa:	cd b7       	in	r28, 0x3d	; 61
    24fc:	de b7       	in	r29, 0x3e	; 62
	if(running_flag==1){
    24fe:	80 91 68 00 	lds	r24, 0x0068
    2502:	81 30       	cpi	r24, 0x01	; 1
    2504:	11 f4       	brne	.+4      	; 0x250a <__vector_2+0x20>
		running_flag=0;
    2506:	10 92 68 00 	sts	0x0068, r1
	}
}
    250a:	cf 91       	pop	r28
    250c:	df 91       	pop	r29
    250e:	8f 91       	pop	r24
    2510:	0f 90       	pop	r0
    2512:	0f be       	out	0x3f, r0	; 63
    2514:	0f 90       	pop	r0
    2516:	1f 90       	pop	r1
    2518:	18 95       	reti

0000251a <__vector_3>:
ISR(INT2_vect){
    251a:	1f 92       	push	r1
    251c:	0f 92       	push	r0
    251e:	0f b6       	in	r0, 0x3f	; 63
    2520:	0f 92       	push	r0
    2522:	11 24       	eor	r1, r1
    2524:	8f 93       	push	r24
    2526:	df 93       	push	r29
    2528:	cf 93       	push	r28
    252a:	cd b7       	in	r28, 0x3d	; 61
    252c:	de b7       	in	r29, 0x3e	; 62
	if(running_flag==0){
    252e:	80 91 68 00 	lds	r24, 0x0068
    2532:	88 23       	and	r24, r24
    2534:	19 f4       	brne	.+6      	; 0x253c <__vector_3+0x22>
		running_flag=1;
    2536:	81 e0       	ldi	r24, 0x01	; 1
    2538:	80 93 68 00 	sts	0x0068, r24
	}
}
    253c:	cf 91       	pop	r28
    253e:	df 91       	pop	r29
    2540:	8f 91       	pop	r24
    2542:	0f 90       	pop	r0
    2544:	0f be       	out	0x3f, r0	; 63
    2546:	0f 90       	pop	r0
    2548:	1f 90       	pop	r1
    254a:	18 95       	reti

0000254c <__prologue_saves__>:
    254c:	2f 92       	push	r2
    254e:	3f 92       	push	r3
    2550:	4f 92       	push	r4
    2552:	5f 92       	push	r5
    2554:	6f 92       	push	r6
    2556:	7f 92       	push	r7
    2558:	8f 92       	push	r8
    255a:	9f 92       	push	r9
    255c:	af 92       	push	r10
    255e:	bf 92       	push	r11
    2560:	cf 92       	push	r12
    2562:	df 92       	push	r13
    2564:	ef 92       	push	r14
    2566:	ff 92       	push	r15
    2568:	0f 93       	push	r16
    256a:	1f 93       	push	r17
    256c:	cf 93       	push	r28
    256e:	df 93       	push	r29
    2570:	cd b7       	in	r28, 0x3d	; 61
    2572:	de b7       	in	r29, 0x3e	; 62
    2574:	ca 1b       	sub	r28, r26
    2576:	db 0b       	sbc	r29, r27
    2578:	0f b6       	in	r0, 0x3f	; 63
    257a:	f8 94       	cli
    257c:	de bf       	out	0x3e, r29	; 62
    257e:	0f be       	out	0x3f, r0	; 63
    2580:	cd bf       	out	0x3d, r28	; 61
    2582:	09 94       	ijmp

00002584 <__epilogue_restores__>:
    2584:	2a 88       	ldd	r2, Y+18	; 0x12
    2586:	39 88       	ldd	r3, Y+17	; 0x11
    2588:	48 88       	ldd	r4, Y+16	; 0x10
    258a:	5f 84       	ldd	r5, Y+15	; 0x0f
    258c:	6e 84       	ldd	r6, Y+14	; 0x0e
    258e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2590:	8c 84       	ldd	r8, Y+12	; 0x0c
    2592:	9b 84       	ldd	r9, Y+11	; 0x0b
    2594:	aa 84       	ldd	r10, Y+10	; 0x0a
    2596:	b9 84       	ldd	r11, Y+9	; 0x09
    2598:	c8 84       	ldd	r12, Y+8	; 0x08
    259a:	df 80       	ldd	r13, Y+7	; 0x07
    259c:	ee 80       	ldd	r14, Y+6	; 0x06
    259e:	fd 80       	ldd	r15, Y+5	; 0x05
    25a0:	0c 81       	ldd	r16, Y+4	; 0x04
    25a2:	1b 81       	ldd	r17, Y+3	; 0x03
    25a4:	aa 81       	ldd	r26, Y+2	; 0x02
    25a6:	b9 81       	ldd	r27, Y+1	; 0x01
    25a8:	ce 0f       	add	r28, r30
    25aa:	d1 1d       	adc	r29, r1
    25ac:	0f b6       	in	r0, 0x3f	; 63
    25ae:	f8 94       	cli
    25b0:	de bf       	out	0x3e, r29	; 62
    25b2:	0f be       	out	0x3f, r0	; 63
    25b4:	cd bf       	out	0x3d, r28	; 61
    25b6:	ed 01       	movw	r28, r26
    25b8:	08 95       	ret

000025ba <_exit>:
    25ba:	f8 94       	cli

000025bc <__stop_program>:
    25bc:	ff cf       	rjmp	.-2      	; 0x25bc <__stop_program>
